[
    {
        "content": "<p>I have implement an auth mechanism for <code>dvcli</code> in Rust which makes use of the OS secure store. It safely stores base URL and token pairs under an alias. With this users can invoke <code>dvcli</code> functions and pass an optional <code>profile</code> flag with the alias to re-use the token and url. Here is an example:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>dvcli<span class=\"w\"> </span>auth<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>-n<span class=\"w\"> </span>&lt;NAME&gt;<span class=\"w\"> </span>-t<span class=\"w\"> </span>&lt;TOKEN&gt;<span class=\"w\"> </span>-u<span class=\"w\"> </span>&lt;URL&gt;\ndvcli<span class=\"w\"> </span>-p<span class=\"w\"> </span>&lt;NAME&gt;<span class=\"w\"> </span>dataset<span class=\"w\"> </span>upload<span class=\"w\"> </span>-i<span class=\"w\"> </span>&lt;PID&gt;<span class=\"w\"> </span>&lt;PATHS&gt;\n</code></pre></div>\n<p>I was wondering if this would also be worth looking into for pyDataverse and easyDataverse? Something along these lines:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">NativeApi</span><span class=\"p\">(</span><span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s2\">\"darus\"</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>This way one can use the profile system-wide without the need of copy-pasting the token and URL all the time. Its not as nice as having SSO, but it adds some convenience.</p>",
        "id": 502610822,
        "sender_full_name": "Jan Range",
        "timestamp": 1740758329
    },
    {
        "content": "<p>Sure, sounds nice.</p>",
        "id": 502611018,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740758383
    }
]