[
    {
        "content": "<p>I have a question about <a href=\"https://github.com/gdcc/easyDataverse/pull/14\">https://github.com/gdcc/easyDataverse/pull/14</a></p>\n<p>Ultimately, a dataset receives a .tab file, right?</p>\n<p>But more is going on? At first I thought the code was going to call <a href=\"https://guides.dataverse.org/en/6.1/api/native-api.html#editing-variable-level-metadata\">https://guides.dataverse.org/en/6.1/api/native-api.html#editing-variable-level-metadata</a> but apparently not.</p>\n<p>I'm sure it's useful, I just don't quite get it. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 426745261,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1710509767
    },
    {
        "content": "<p>When uploading tab files to Dataverse, the code writes the file to a temporary directory and uploads it using dvuploader. Also, upon adding a DataFrame to a Dataset object, stats and column metadata (name, dtype) are extracted to the TabData object for users to retrieve. Variable metadata editing via DDI has not been implemented yet.</p>\n<p>Did that help or did I misunderstood something? Would it be better to store the variable metadata in DDI already within the object? Or better as an exporter?</p>",
        "id": 426783477,
        "sender_full_name": "Jan Range",
        "timestamp": 1710521303
    },
    {
        "content": "<p>This is the part I'm struggling with:</p>\n<p>\"Also, upon adding a DataFrame to a Dataset object, stats and column metadata (name, dtype) are extracted to the TabData object for users to retrieve.\"</p>\n<p>Is this persisted in Dataverse? Or is it all happening client-side?</p>",
        "id": 426784150,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1710521539
    },
    {
        "content": "<p>All is happening client-side at the moment.</p>",
        "id": 426784274,
        "sender_full_name": "Jan Range",
        "timestamp": 1710521583
    },
    {
        "content": "<p>Ok. I'm just thinking if you want to persist the types for variables (date, string, integer, whatever) in Dataverse, you can use that API above.</p>",
        "id": 426784477,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1710521656
    },
    {
        "content": "<p>But since there is an endpoint for adding the metadata, I am happy to add that. I haven't been using the tabular features as much and just learned about the edit endpoint.</p>",
        "id": 426784699,
        "sender_full_name": "Jan Range",
        "timestamp": 1710521734
    },
    {
        "content": "<p>I think Dataverse will try to guess types for variables. Definitely for rich formats like Stata. Not sure about CSV.</p>",
        "id": 426784948,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1710521801
    },
    {
        "content": "<p>So when you say \"for users to retrieve\" you mean users of EasyDataverse retrieving locally from objects in EasyDataverse, right? Not retrieval over the wire from a Dataverse server.</p>",
        "id": 426785148,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1710521863
    },
    {
        "content": "<p>Yes, it is using Pandas to retrieve types and statistics</p>",
        "id": 426785298,
        "sender_full_name": "Jan Range",
        "timestamp": 1710521905
    },
    {
        "content": "<p>Cool, cool. Sounds very useful.</p>",
        "id": 426785355,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1710521922
    },
    {
        "content": "<p>I'm just thinking if we can feed information about types or whatever (descriptions of columns) back into Dataverse, others can benefit.</p>",
        "id": 426785461,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1710521951
    },
    {
        "content": "<p>Of course, only the author can push this info back into Dataverse.</p>",
        "id": 426785541,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1710521976
    },
    {
        "content": "<p>I'll look into pushing the pandas data to Dataverse directly. When there is metadata already present on Dataverse, it will override the pandas stuff upon fetching/uploading</p>",
        "id": 426785552,
        "sender_full_name": "Jan Range",
        "timestamp": 1710521981
    },
    {
        "content": "<p>Sounds good. And you should definitely play with the Data Curation Tool and the new Croissant Editor. Please see <a class=\"stream-topic\" data-stream-id=\"379673\" href=\"/#narrow/stream/379673-dev/topic/Croissant.20Editor\">#dev &gt; Croissant Editor</a></p>",
        "id": 426785768,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1710522039
    },
    {
        "content": "<p>I have checked mlcroissant out too. It looks quite simple, but I have a couple of questions that I hope on wednesday will be resolved</p>",
        "id": 426785828,
        "sender_full_name": "Jan Range",
        "timestamp": 1710522054
    }
]