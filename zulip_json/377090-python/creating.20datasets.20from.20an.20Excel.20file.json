[
    {
        "content": "<p>Given an Excel file with columns like \"dataset title\", \"description\", etc., what's the recommended way to create datasets using Python? pyDataverse? EasyDataverse? Something else?</p>",
        "id": 493598393,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736865146
    },
    {
        "content": "<p>So great you asked this today! I was just talking with the manager of a collection about this, but for editing the metadata of multiple datasets. I pointed them to pyDataverse documentation and the advanced usage page, which mentions using their csv templates. Seems like you can create and edit dataset metadata that way. I've never got it to work, but always figured I didn't know enough about Python <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 493622400,
        "sender_full_name": "Julian Gautier",
        "timestamp": 1736871875
    },
    {
        "content": "<p>In practice I'm using EasyDataverse. I'll push my script to GitHub soon.</p>",
        "id": 493622477,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736871910
    },
    {
        "content": "<p>Wouldn't it be interesting to have a (community) repository  with examples of concrete cases using python or easyDataverse? For people who aren't necessarily developers but can modify scripts. There could also be an entry somewhere in the documentation, in <a href=\"https://guides.dataverse.org/en/latest/admin/reporting-tools-and-queries.html#reporting-tools-and-common-queries\">https://guides.dataverse.org/en/latest/admin/reporting-tools-and-queries.html#reporting-tools-and-common-queries</a> for example.</p>",
        "id": 493892361,
        "sender_full_name": "GwenaÃ«l Doux",
        "timestamp": 1736936722
    },
    {
        "content": "<p>Yes, absolutely. Great idea. I'm not sure where these scripts should go.</p>",
        "id": 493917714,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736945077
    },
    {
        "content": "<p>We could host a repository that includes Jupyter notebooks with examples. The upside is that these can be used pretty nicely within an mkdocs documentation. Did this for my latest <a href=\"https://github.com/JR-1991/PythonProgrammingBio24\">Python course</a> (<a href=\"https://jr-1991.github.io/PythonProgrammingBio24/\">Doc Page</a>)</p>",
        "id": 493919050,
        "sender_full_name": "Jan Range",
        "timestamp": 1736945465
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"599841\">@Jan Range</span> we forgot to talk about this today! Where to put scripts, I mean. Next time. <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span> (<a class=\"stream-topic\" data-stream-id=\"377090\" href=\"/#narrow/channel/377090-python/topic/meetings\">#python &gt; meetings</a>)</p>",
        "id": 493959009,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736956386
    },
    {
        "content": "<p>I'm still not quite sure where to put this script but I'll go ahead and attach it here so people can see it: <a href=\"/user_uploads/53090/_9D6dP9em2gUcaeMkSC5OHKt/create-datasets-from-excel.py\">create-datasets-from-excel.py</a></p>",
        "id": 493972572,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736959781
    },
    {
        "content": "<p>This is a slightly redacted version but quite similar to the one we plan to use.</p>",
        "id": 493972812,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736959826
    },
    {
        "content": "<p>Note that we plan to fix the license issue mentioned in the script. The discussion is happening here: <a class=\"stream-topic\" data-stream-id=\"377090\" href=\"/#narrow/channel/377090-python/topic/setting.20a.20license.20with.20EasyDataverse\">#python &gt; setting a license with EasyDataverse</a></p>",
        "id": 493972901,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736959857
    },
    {
        "content": "<p>We could open a general repository. Maybe something along the lines of \"Dataverse Recipes\" - Could then be used for Python and other languages.</p>",
        "id": 493983721,
        "sender_full_name": "Jan Range",
        "timestamp": 1736963225
    },
    {
        "content": "<p>Back in the day, Perl had a cookbook: <a href=\"https://en.wikipedia.org/wiki/Perl_Cookbook\">https://en.wikipedia.org/wiki/Perl_Cookbook</a> <span aria-label=\"cook\" class=\"emoji emoji-1f9d1-200d-1f373\" role=\"img\" title=\"cook\">:cook:</span></p>",
        "id": 493992521,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736966196
    },
    {
        "content": "<p>It looks like <a href=\"https://github.com/ubc-library-rc/dataverse_utils\">https://github.com/ubc-library-rc/dataverse_utils</a> is still being maintained. We link to it from <a href=\"https://guides.dataverse.org/en/6.5/api/client-libraries.html#python\">https://guides.dataverse.org/en/6.5/api/client-libraries.html#python</a></p>\n<p>All commits by Paul Lesack, it looks like. I don't think he's on Zulip but here's his GitHub: <a href=\"https://github.com/plesubc\">https://github.com/plesubc</a></p>",
        "id": 494016655,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736975137
    },
    {
        "content": "<p>From the perspective of the person trying to get something with Python, it probably doesn't matter if  there's a mix of examples that use pyDataverse, EasyDataverse, requests, the standard library, etc.</p>",
        "id": 494017179,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736975343
    },
    {
        "content": "<p>We had an intern suggest that we add even more Python snippets to the API Guide in <a href=\"https://github.com/IQSS/dataverse/issues/4255\">https://github.com/IQSS/dataverse/issues/4255</a> but we resisted this. We have been trying to keep the API Guide agnostic when it comes to language. So we document everything with curl.</p>",
        "id": 494017427,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736975427
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"626369\">@Don Sizemore</span> you also have <a href=\"https://github.com/uncch-rdmc/dataverse-toolbox\">https://github.com/uncch-rdmc/dataverse-toolbox</a></p>",
        "id": 494017622,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736975499
    },
    {
        "content": "<p>Whether it's that \"dataverse_utils\" repo or that \"dataverse-toolbox\" repo, I think it's the right approach, to have a separate repo, rather than trying to maintain these scripts as part of the API Guide.</p>",
        "id": 494017831,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736975585
    },
    {
        "content": "<p>I agree, a separate repo is a cleaner solution and easier in terms of maintenance. What do you think of the idea of having a documentation on top of it, like I did for the Python course?</p>\n<p>Docs - <a href=\"https://jr-1991.github.io/PythonProgrammingBio24/\">https://jr-1991.github.io/PythonProgrammingBio24/</a><br>\nRepo - <a href=\"https://github.com/JR-1991/PythonProgrammingBio24\">https://github.com/JR-1991/PythonProgrammingBio24</a></p>\n<p>Jupyter notebooks integrate quite well into MkDocs and could essentially function as doc and recipe at the same time. Plus, we could add a CI that tests these using the DV Action by running the notebooks. So, when something falls out of sync we know  it.</p>",
        "id": 494018984,
        "sender_full_name": "Jan Range",
        "timestamp": 1736976026
    },
    {
        "content": "<p>Sure! Docs on top sounds great!</p>",
        "id": 494019115,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736976095
    },
    {
        "content": "<p>And no objection to CI, of course! Fancy! <span aria-label=\"unicorn\" class=\"emoji emoji-1f984\" role=\"img\" title=\"unicorn\">:unicorn:</span></p>",
        "id": 494019332,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1736976184
    },
    {
        "content": "<p>I created a dedicated topic for this: <a class=\"stream-topic\" data-stream-id=\"377090\" href=\"/#narrow/channel/377090-python/topic/a.20place.20for.20Python.20scripts\">#python &gt; a place for Python scripts</a></p>",
        "id": 494221255,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1737056606
    },
    {
        "content": "<p>Now we can keep talking about Excel if we like. <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 494221284,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1737056621
    },
    {
        "content": "<p>Sorry for the hijacking</p>",
        "id": 494324896,
        "sender_full_name": "GwenaÃ«l Doux",
        "timestamp": 1737108481
    },
    {
        "content": "<p>Ha, no problem. <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 494357126,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1737119307
    },
    {
        "content": "<p>We have a place now! See <a class=\"stream-topic\" data-stream-id=\"377090\" href=\"/#narrow/channel/377090-python/topic/a.20place.20for.20Python.20scripts\">#python &gt; a place for Python scripts</a></p>",
        "id": 494357183,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1737119328
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"599841\">@Jan Range</span> thanks for <a href=\"https://github.com/gdcc/dataverse-recipes/pull/2\">https://github.com/gdcc/dataverse-recipes/pull/2</a> ! Merged! Can you (and others, if you like) please look again at <a href=\"https://github.com/gdcc/dataverse-recipes/pull/1\">https://github.com/gdcc/dataverse-recipes/pull/1</a> ? Thanks!</p>",
        "id": 502052243,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740578017
    },
    {
        "content": "<p>Heads up that I closed PR#1 in favor of this one: <a href=\"https://github.com/gdcc/dataverse-recipes/pull/4\">https://github.com/gdcc/dataverse-recipes/pull/4</a></p>",
        "id": 502319638,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740671764
    },
    {
        "content": "<p>I'm having a little trouble with Excel actually. When I use the original file Sonia gave me, I'm able to extract the hyperlinks.</p>\n<p>However, if I edit the file in Excel to edit the hyperlinks (to make them anonymous), the script can no longer extract them.</p>",
        "id": 502320274,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740671915
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"599841\">@Jan Range</span> or others, I'm happy to send you the original file if you want to play with it.</p>",
        "id": 502320375,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740671940
    },
    {
        "content": "<p>Happy to check this <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 502324429,
        "sender_full_name": "Jan Range",
        "timestamp": 1740672982
    },
    {
        "content": "<p>Maybe I should add a comment saying that the hyperlink extraction doesn't work with the sample file. What do you think?</p>",
        "id": 502600197,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740755342
    },
    {
        "content": "<p>Is the <code>data_example.xlsx</code>causing the issue?</p>",
        "id": 502602898,
        "sender_full_name": "Jan Range",
        "timestamp": 1740756086
    },
    {
        "content": "<p>Tested it outside the script and the extraction is working. Looking through your script now.</p>",
        "id": 502602957,
        "sender_full_name": "Jan Range",
        "timestamp": 1740756107
    },
    {
        "content": "<p>Oh! Interesting.</p>",
        "id": 502602980,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740756118
    },
    {
        "content": "<p>Please try it with my script. It doesn't work for me. If you can get it working, great!</p>",
        "id": 502603061,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740756133
    },
    {
        "content": "<p><a href=\"/user_uploads/53090/DbJKgy6XrvHA1wf14K1kUah2/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/53090/DbJKgy6XrvHA1wf14K1kUah2/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"2316x1378\" src=\"/user_uploads/thumbnail/53090/DbJKgy6XrvHA1wf14K1kUah2/image.png/840x560.webp\"></a></div>",
        "id": 502603096,
        "sender_full_name": "Jan Range",
        "timestamp": 1740756145
    },
    {
        "content": "<p>Or we could even switch to your way.</p>",
        "id": 502603124,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740756153
    },
    {
        "content": "<p>Yes, will do. Wanted to sort out the openpyxl stuff beforehand</p>",
        "id": 502603173,
        "sender_full_name": "Jan Range",
        "timestamp": 1740756166
    },
    {
        "content": "<p>Got it!</p>",
        "id": 502603216,
        "sender_full_name": "Jan Range",
        "timestamp": 1740756181
    },
    {
        "content": "<p>pandas is probably more standard anyway <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 502603299,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740756209
    },
    {
        "content": "<p>The issue lies in the following:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">hyperlink</span><span class=\"p\">:</span>\n        <span class=\"n\">access_link_url</span> <span class=\"o\">=</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">hyperlink</span><span class=\"o\">.</span><span class=\"n\">display</span> <span class=\"c1\"># &lt;-- Extracts the shown text</span>\n</code></pre></div>\n<p>It should work by using</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">hyperlink</span><span class=\"p\">:</span>\n        <span class=\"n\">access_link_url</span> <span class=\"o\">=</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">hyperlink</span><span class=\"o\">.</span><span class=\"n\">target</span> <span class=\"c1\"># &lt;-- Extracts the URL</span>\n</code></pre></div>",
        "id": 502603470,
        "sender_full_name": "Jan Range",
        "timestamp": 1740756252
    },
    {
        "content": "<p>That's a good primer for my fresh <em>local</em> DV 6.5 now <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 502603615,
        "sender_full_name": "Jan Range",
        "timestamp": 1740756288
    },
    {
        "content": "<p>Giving it a test on it</p>",
        "id": 502603688,
        "sender_full_name": "Jan Range",
        "timestamp": 1740756309
    },
    {
        "content": "<p>Go, go, go!</p>",
        "id": 502605123,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740756685
    },
    {
        "content": "<p>Okay, it works now, but my guess is that it is just some oddity of openpyxl</p>",
        "id": 502605898,
        "sender_full_name": "Jan Range",
        "timestamp": 1740756913
    },
    {
        "content": "<p><a href=\"/user_uploads/53090/b13fZG7b9M4ycsjBNjyM0S8H/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/53090/b13fZG7b9M4ycsjBNjyM0S8H/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1142x732\" src=\"/user_uploads/thumbnail/53090/b13fZG7b9M4ycsjBNjyM0S8H/image.png/840x560.webp\"></a></div>",
        "id": 502605912,
        "sender_full_name": "Jan Range",
        "timestamp": 1740756917
    },
    {
        "content": "<p>you got it working? with that change above?</p>",
        "id": 502606034,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740756958
    },
    {
        "content": "<p>display vs target?</p>",
        "id": 502606094,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740756966
    },
    {
        "content": "<p>The boolean check <code>if value[3].hyperlink:</code> is what has caused the condition to never be true. Hence, there was always <code>None</code>. Being explicit by using <code>value[3].hyperlink is not None</code> works though.</p>",
        "id": 502606295,
        "sender_full_name": "Jan Range",
        "timestamp": 1740757024
    },
    {
        "content": "<p>But in my Jupyter notebook using the exact same way does not cause these issues <span aria-label=\"shaking face\" class=\"emoji emoji-1fae8\" role=\"img\" title=\"shaking face\">:shaking_face:</span></p>",
        "id": 502606435,
        "sender_full_name": "Jan Range",
        "timestamp": 1740757066
    },
    {
        "content": "<p>But why would it work with the original Excel file and not the one I created from scratch?</p>",
        "id": 502606522,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740757083
    },
    {
        "content": "<p>I dont know. Strangely, I just fumbled around and reverted the explicit check and now it works too. I am confused :-D</p>",
        "id": 502606781,
        "sender_full_name": "Jan Range",
        "timestamp": 1740757168
    },
    {
        "content": "<p>Feels like rolling dice <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 502606933,
        "sender_full_name": "Jan Range",
        "timestamp": 1740757203
    },
    {
        "content": "<p>But yea, using <code>target</code> extracts the link as expected</p>",
        "id": 502607066,
        "sender_full_name": "Jan Range",
        "timestamp": 1740757241
    },
    {
        "content": "<p>Yeah, seems like a good fix. I tested with the original file and my sample. Pushed! Thanks! <a href=\"https://github.com/gdcc/dataverse-recipes/pull/4/commits/9363ce7d705e490abb5cae0d7a9f8d1b0e977fdf\">https://github.com/gdcc/dataverse-recipes/pull/4/commits/9363ce7d705e490abb5cae0d7a9f8d1b0e977fdf</a></p>",
        "id": 502607287,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740757314
    },
    {
        "content": "<p>Anything else to fix before we merge it?</p>",
        "id": 502607607,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740757396
    },
    {
        "content": "<p>Runs fine on my machine, nothing to fix from my side <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 502607702,
        "sender_full_name": "Jan Range",
        "timestamp": 1740757427
    },
    {
        "content": "<p>Merged!</p>",
        "id": 502607862,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1740757464
    }
]