[
    {
        "content": "<p>I have question about PyDataverse. Is the advanced usage of it mean to add datasets that already have DOIs? Can it be used to batch upload datasets without existing DOI?</p>",
        "id": 467628892,
        "sender_full_name": "Hansen Zhang",
        "timestamp": 1725474618
    },
    {
        "content": "<p>I assume you're looking at <a href=\"https://pydataverse.readthedocs.io/en/latest/user/advanced-usage.html\">https://pydataverse.readthedocs.io/en/latest/user/advanced-usage.html</a></p>",
        "id": 467629739,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1725474873
    },
    {
        "content": "<p>\"This tutorial will show you how to mass-import metadata from pyDataverse’s own CSV format (see <a href=\"https://pydataverse.readthedocs.io/en/latest/user/csv-templates.html#user-csv-templates\">CSV templates</a>), create pyDataverse objects from it (Datasets and Datafiles) and upload the data and metadata through the API.\"</p>",
        "id": 467629828,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1725474901
    },
    {
        "content": "<p>Hmm, judging from <a href=\"https://github.com/gdcc/pyDataverse/blob/v0.3.3/pyDataverse/templates/datasets.csv\">https://github.com/gdcc/pyDataverse/blob/v0.3.3/pyDataverse/templates/datasets.csv</a> it looks like it wants an existing DOI but I've never used this before.</p>",
        "id": 467630371,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1725475058
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"728331\">@Hansen Zhang</span> I guess you can try it and see. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 467630530,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1725475092
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"728331\">@Hansen Zhang</span> I haven’t used it myself, but based on the examples, it appears to be a flattened version of the dataset metadata or datafile. The DOI is optional, but if provided, should modify the dataset’s metadata. As shown in the documentation, the list of dictionaries (obtained from the <code>csv</code> using <code>read_csv_as_dicts</code>) is used to generate new datasets:</p>\n<p><a href=\"/user_uploads/53090/t47pEPxen1qhxwZE04bAp0Ku/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/53090/t47pEPxen1qhxwZE04bAp0Ku/image.png\" title=\"image.png\"><img data-original-dimensions=\"1396x300\" src=\"/user_uploads/thumbnail/53090/t47pEPxen1qhxwZE04bAp0Ku/image.png/840x560.webp\"></a></div><p>Hence, once transformed into the <code>dict</code> state, you can use each row/dataset similar to how you would create/edit a normal dataset (see <a href=\"https://pydataverse.readthedocs.io/en/latest/user/basic-usage.html#create-dataset\">here</a>).</p>",
        "id": 469384800,
        "sender_full_name": "Jan Range",
        "timestamp": 1726057860
    },
    {
        "content": "<p>Personally, I'm not sure the CSV approach is the best choice, given that we're working with nested structures. <span class=\"user-mention\" data-user-id=\"598112\">@Philip Durbin 🐉</span>, perhaps using a JSONL format would be more practical for parsing and validation. I'll add this to the agenda for the next pyDataverse WG meeting.</p>",
        "id": 469387062,
        "sender_full_name": "Jan Range",
        "timestamp": 1726058527
    }
]