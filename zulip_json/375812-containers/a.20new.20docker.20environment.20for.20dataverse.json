[
    {
        "content": "<p>I just build a working docker solution for dataverse from scratch based on the official installation guideline.<br>\nUnlike the official docker project which depends on release images and new docker specified scripts, <br>\nthis solution only depends on artifacts mention in the official installation guideline and popular base images.<br>\nwhich means you don't have to maintain two different code set for manual deployment and docker.</p>\n<p>Here is the project: <a href=\"https://github.com/link89/dataverse-docker\">https://github.com/link89/dataverse-docker</a></p>",
        "id": 459551949,
        "sender_full_name": "Henry Xu",
        "timestamp": 1723229703
    },
    {
        "content": "<p>Looks interesting. Thanks for also mentioning it at <a href=\"https://groups.google.com/g/dataverse-community/c/6Q9C0KMOndo/m/ZPAaxXzeBAAJ\">https://groups.google.com/g/dataverse-community/c/6Q9C0KMOndo/m/ZPAaxXzeBAAJ</a></p>",
        "id": 460097745,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1723474170
    },
    {
        "content": "<p>I added it to the list here: Document competing containerization efforts and how to choose <a href=\"https://github.com/IQSS/dataverse/issues/10522\">#10522</a></p>",
        "id": 460097964,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1723474242
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"743173\">@Henry Xu</span> hi! Your new Docker environment was discussed during last week's meeting. You can watch it at <a href=\"https://harvard.zoom.us/rec/share/MtAOhUuG-abIF72gXCNQBOHshawfXG5WLdZNNiD5zbfC3FrezReOoyCFk2pvYxv9.cZCHOtECVqC0DRUt\">https://harvard.zoom.us/rec/share/MtAOhUuG-abIF72gXCNQBOHshawfXG5WLdZNNiD5zbfC3FrezReOoyCFk2pvYxv9.cZCHOtECVqC0DRUt</a></p>",
        "id": 463706899,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1724161592
    },
    {
        "content": "<p>Great to know that you have discussed it. I started it with the goal of building a production ready container solution for my organization . When I tried the community's container solutions, I found that the latest versions didn't run as expected, and the documentation indicated that it isn't yet production-ready. As I delved into fixing issues on top of the community's work, I noticed that containerization efforts were scattered and lacked documentation, there are multiple Dockerfiles and compose.yml files spread across the Dataverse project. So I decided to take a less risky path: automating the installation and configuration based directly on Dataverseâ€™s production deployment documentation within a container environment from scratch. </p>\n<p>Currently, this project can run Dataverse version 6.3 (and my own patched version) correctly via Docker Compose. Since all installation resources come from official packages (like Solr schemas), I believe it will have good compatibility with past and future versions.  Kubernetes is not my priority though.  Kubernetes excels at scaling stateless components . Although recent Kubernetes versions offer better support for stateful applications, most ops engineers would still hesitate to let you deploy databases in their managed Kubernetes clusters, as it increases complexity without getting any benefits .A lightweight Docker Swarm solution can offer higher performance and availability options if needed.</p>",
        "id": 463756189,
        "sender_full_name": "Henry Xu",
        "timestamp": 1724172956
    }
]