[
    {
        "content": "<p>I have been talking with the folks from <a href=\"https://join2.de\">https://join2.de</a> today. (My library is a part of the consortium) They are transitioning to use MyCoRe instead of Invenio at the moment. One of the pieces I am very interested in for our <a href=\"https://data.fz-juelich.de\">institutional repository JÃ¼lich DATA</a> is to use their controlled vocabularies in Dataverse. I could of course write some JavaScript that reads their REST API.</p>\n<p>But I'm wondering if it wouldn't make more sense - also with the SPA on the horizon where we will still need server side validation of data - that Dataverse itself (or some microservice that the Dataverse backend knows how to talk to) would harvest these vocabularies (e.g. using OAI-PMH) and offer them via the DV REST API / JSON Schema to some client script, via JSF as options and use it for validation on datasets coming in via API.</p>\n<p>Harvesting controlled vocabularies makes a lot of sense from a architectural and availibility point of view. What do y'all think <span class=\"user-mention\" data-user-id=\"598432\">@Slava Tykhonov</span> <span class=\"user-mention\" data-user-id=\"598112\">@Philip Durbin</span> <span class=\"user-mention\" data-user-id=\"621770\">@Julian Gautier</span> <span class=\"user-mention\" data-user-id=\"651833\">@Philipp Conzett</span> ?</p>",
        "id": 451706815,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1721118582
    },
    {
        "content": "<p>(This might be connected to the idea of custom validators for fields, see <a class=\"stream-topic\" data-stream-id=\"379673\" href=\"/#narrow/stream/379673-dev/topic/metadata.20validators.20per.20field\">#dev &gt; metadata validators per field</a> )</p>",
        "id": 451708202,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1721118933
    },
    {
        "content": "<p>Hi Oliver, how is it different from <a href=\"https://zenodo.org/records/8133723\">https://zenodo.org/records/8133723</a>?</p>",
        "id": 451709259,
        "sender_full_name": "Slava Tykhonov",
        "timestamp": 1721119287
    },
    {
        "content": "<p>scripts and docs here <a href=\"https://github.com/gdcc/dataverse-external-vocab-support\">https://github.com/gdcc/dataverse-external-vocab-support</a></p>",
        "id": 451710046,
        "sender_full_name": "Slava Tykhonov",
        "timestamp": 1721119574
    },
    {
        "content": "<p>To quote from the paper:</p>\n<blockquote>\n<p>This mechanism does not currently take advantage of the configuration mechanism, data-* attributes, or caching of our external vocabulary support mechanism which makes it harder to see how they could be shared across repositories.</p>\n</blockquote>",
        "id": 451710118,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1721119611
    },
    {
        "content": "<p>What I am envisioning is kind of going to that place. If we could harvest the controlled vocabularies from external sources, we get this caching in place. A Dataverse installation would be more independent from the vocabulary provider, as it keeps a _synchronized_ copy. OAI-PMH has been used for such harvesting for a very long time and would come in handy here.</p>\n<p>Also, the Javascript solution is great for the UI part. But it doesn't yet allow any server side validation of the content. And it cannot be used from API clients that do not use Javascript.</p>",
        "id": 451710650,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1721119818
    },
    {
        "content": "<p>Coming to think of it: if we have a cache, we can also expose it via OAI-PMH, so others can harvest the vocabularies again...</p>",
        "id": 451711467,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1721120132
    },
    {
        "content": "<p>We could even go a step further and change the data model of our controlled vocabularies to implement them in a more SKOS like manner. Exposing those again as a SKOS via OAI-PMH could at least partially solve the point you mentioned in the paper about \"how they could be shared across repositories\"</p>",
        "id": 451713108,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1721120710
    },
    {
        "content": "<p>How they're hosting their vocabularies now? If it will be in SKOS you can directly upload in Skosmos <a href=\"https://skosmos.org\">https://skosmos.org</a> and get connection to Dataverse working.</p>",
        "id": 451716850,
        "sender_full_name": "Slava Tykhonov",
        "timestamp": 1721121949
    },
    {
        "content": "<p>We've implemented \"cache\" from Dataverse in Jena Fuseki which is component of Skosmos platform.</p>",
        "id": 451717181,
        "sender_full_name": "Slava Tykhonov",
        "timestamp": 1721122074
    },
    {
        "content": "<p>And forget about OAI-PMH, it's not suitable for controlled vocabularies. export in OAI-ORE has it all.</p>",
        "id": 451717330,
        "sender_full_name": "Slava Tykhonov",
        "timestamp": 1721122126
    },
    {
        "content": "<p>OAI-PMH would only be used as the transport / sync protocol. The payload can be OAI-ORE, serialized as XML-RDF.</p>",
        "id": 451725913,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1721124394
    },
    {
        "content": "<p>Currently, MyCoRe exposes \"classifications\" as a custom XML thing. They are experimenting with exposing it as SKOS though. <a href=\"https://cmswiki.rrz.uni-hamburg.de/hummel/MyCoRe/Organisation/AnwenderWorkshop2022?action=AttachFile&amp;do=view&amp;target=221109_MyCoRe-ObjectListing_SKOS.pdf\">https://cmswiki.rrz.uni-hamburg.de/hummel/MyCoRe/Organisation/AnwenderWorkshop2022?action=AttachFile&amp;do=view&amp;target=221109_MyCoRe-ObjectListing_SKOS.pdf</a></p>",
        "id": 451726204,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1721124498
    },
    {
        "content": "<p>If you can get vocabs in SKOS, the integration is pretty straightforward like we designed it.</p>",
        "id": 451735408,
        "sender_full_name": "Slava Tykhonov",
        "timestamp": 1721128057
    },
    {
        "content": "<p>It sounds like <span class=\"user-mention\" data-user-id=\"598183\">@Oliver Bertuch</span> wants to pull down and sync the vocab values locally.</p>\n<p><span class=\"user-mention\" data-user-id=\"598432\">@Slava Tykhonov</span> is saying he already implemented a cache. Is that enough? A cache?</p>\n<p>It sounds like Oliver wants a local service as well.</p>",
        "id": 451761484,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1721137242
    },
    {
        "content": "<p>The technical details here go over my head, but not having to pull data from an API every time a depositor uses a metadata field could be really helpful. When the external vocabulary support mechanism was used to suggest names from a Crossref API, we saw some performance-related issues that might make it tough for depositors to use those metadata fields, and we talked about how maintaining \"local\" copies of what's in that API might help.</p>",
        "id": 451788702,
        "sender_full_name": "Julian Gautier",
        "timestamp": 1721144102
    },
    {
        "content": "<p>Yes, exactly, it should be a performance win.</p>",
        "id": 451790942,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1721144591
    },
    {
        "content": "<p>Awesome, yeah. In the UX WG's plans to usability test a redesign of the Citation metadata block that uses the external vocabulary support mechanism, I mention that moderators should look out for problems that might be caused by these performance-related challenges.</p>",
        "id": 451798787,
        "sender_full_name": "Julian Gautier",
        "timestamp": 1721146288
    },
    {
        "content": "<p>Don't forget about ontologies like Dublin Core during redesign.</p>",
        "id": 451807854,
        "sender_full_name": "Slava Tykhonov",
        "timestamp": 1721148547
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598432\">@Slava Tykhonov</span> could you write more about what that could mean? For example, would this involve thinking about how what's entered in the deposit form is included in the Dublin Core metadata that Dataverse repositories export?</p>",
        "id": 451809408,
        "sender_full_name": "Julian Gautier",
        "timestamp": 1721149157
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"598432\">@Slava Tykhonov</span>. The UX WG has been getting more in-depth about the redesign and we haven't discussed Dublin Core in any capacity, including how deposit metadata is imported into and exported out of repositories that use Dataverse. We have discussed the DataCite schema.</p>\n<p>But assuming that metadata mapping to Dublin Core, import/export and controlled vocabularies is generally what you were thinking of last month, I've thought there are more appropriate standards for sharing metadata that includes values from controlled vocabularies, and that a lot of details about controlled vocabulary terms used to describe deposits will be lost when Dublin Core is used.</p>\n<p>Let me know what you think or if you were thinking about something else. :)</p>",
        "id": 465527933,
        "sender_full_name": "Julian Gautier",
        "timestamp": 1724783021
    },
    {
        "content": "<p>Hi Julian, sorry for the late reaction. It can be very interesting if Dataverse will support DCAT and Croissant next to Dublin Core for the import/export of metadata.</p>",
        "id": 466930394,
        "sender_full_name": "Slava Tykhonov",
        "timestamp": 1725279170
    },
    {
        "content": "<p>Ah, <span class=\"user-mention\" data-user-id=\"707680\">@Sonia Barbosa</span> asked about interest in DCAT, too, in another Zulip thread at <a href=\"#narrow/stream/375707-community/topic/Support.20for.20Importing.20and.20Exporting.20DCAT.20Metadata\">https://dataverse.zulipchat.com/#narrow/stream/375707-community/topic/Support.20for.20Importing.20and.20Exporting.20DCAT.20Metadata</a></p>",
        "id": 467847603,
        "sender_full_name": "Julian Gautier",
        "timestamp": 1725540746
    }
]