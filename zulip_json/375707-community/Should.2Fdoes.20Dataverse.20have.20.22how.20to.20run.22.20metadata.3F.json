[
    {
        "content": "<p>Dataverse holds input data, code, and output artifacts. Users can happily read all three. But re-executing the code is more difficult and more useful than just reading it. More useful because users can tweak the code or try new input data. More difficult because being able to re-execute the code requires more than just the source code, also metadata such as R version (more generally software environment specification) and the \"workflow\" (what code to run in what order with what parameters, etc.).</p>\n<p>Should Dataverse store machine-readable metadata describing how to run the code?</p>\n<p>One possible implementation, for example, might be to have a polymorphic \"software environment\" field (could be <code>requirements.txt</code>, <code>renv.lock</code>, <code>Dockerfile</code>), and a polymorphic \"workflow\" field (could be a script, CWL workflow, or other kind of workflow, that kicks off the rest of the code in the Dataset (to use Dataverse's term)). Other implementations are possible. For this discussion, I want to ask if _any_ such implementation is considered \"in scope\" for the Dataverse project by the community (especially devs!), or is it considered better handled by other tools?</p>",
        "id": 401218532,
        "sender_full_name": "Sam Grayson",
        "timestamp": 1699556521
    },
    {
        "content": "<p>Hi! We have an ongoing grant with the NIH (GREI) and as part of \"aim 3\" we definitely plan to poke around in this area. I don't think much has been written on this yet but there are a few notes at <a href=\"https://github.com/IQSS/dataverse-pm/issues/15\">https://github.com/IQSS/dataverse-pm/issues/15</a></p>",
        "id": 401233318,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1699562652
    },
    {
        "content": "<p>It's a big topic. Overall, I'm just trying to say \"yes, and we'd love to hear your ideas\"! <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 401233382,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1699562683
    },
    {
        "content": "<p>CodeMeta has \"build instructions\": <a href=\"https://guides.dataverse.org/en/6.0/user/appendix.html\">https://guides.dataverse.org/en/6.0/user/appendix.html</a></p>",
        "id": 401233817,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1699562888
    },
    {
        "content": "<p>There's that, I also just learned about Workflow Run Crate profile of RO-Crates</p>",
        "id": 401233880,
        "sender_full_name": "Sam Grayson",
        "timestamp": 1699562927
    },
    {
        "content": "<p>We had a guy at Harvard Medical School create a very specific custom metadata block for x-ray crystallography that included reprocessing instructions.</p>",
        "id": 401233921,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1699562954
    },
    {
        "content": "<p>Ah, you might also be interested in <a class=\"stream-topic\" data-stream-id=\"379673\" href=\"/#narrow/stream/379673-dev/topic/RO-Crate\">#dev &gt; RO-Crate</a> .</p>",
        "id": 401233956,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1699562976
    },
    {
        "content": "<p>Ooh, do you have a link handy about the x-ray crystallography?</p>",
        "id": 401233961,
        "sender_full_name": "Sam Grayson",
        "timestamp": 1699562978
    },
    {
        "content": "<p><a href=\"/user_uploads/53090/6asriyRy-f1KizjQTww0O3Ri/xray20170831b.tsv\">xray20170831b.tsv</a></p>",
        "id": 401234131,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1699563057
    }
]