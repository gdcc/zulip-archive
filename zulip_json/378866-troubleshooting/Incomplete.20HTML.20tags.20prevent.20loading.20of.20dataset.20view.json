[
    {
        "content": "<p>I recently stumbled upon a dataset on our instance that failed to load, throwing a server-side 500 error:</p>\n<div class=\"codehilite\"><pre><span></span><code>HTTP Status 500 - Internal Server Error\ntype Exception report\n\nmessageInternal Server Error\n\ndescriptionThe server encountered an internal error that prevented it from fulfilling this request.\n\nexception\n\njakarta.servlet.ServletException: Unexpected char -1 at (line no=1, column no=33321, offset=33320)\nroot cause\n\njakarta.json.stream.JsonParsingException: Unexpected char -1 at (line no=1, column no=33321, offset=33320)\nnote The full stack traces of the exception and its root causes are available in the Payara Server 6.2024.6 #badassfish logs.\n\nPayara Server 6.2024.6 #badassfish\n</code></pre></div>\n<p><strong>Payara log</strong></p>\n<div class=\"codehilite\"><pre><span></span><code>[#|2025-06-25T13:52:41.637+0200|SEVERE|Payara 6.2024.6|jakarta.enterprise.resource.webcontainer.faces.application|_ThreadID=92;_ThreadName=http-thread-pool::jk-connector(3);_TimeMillis=1750852361637;_LevelValue=1000;|\n  Error Rendering View[/dataset.xhtml]\njakarta.el.ELException: /dataset.xhtml @76,78 value=&quot;#{DatasetPage.jsonLd}&quot;: jakarta.json.stream.JsonParsingException: Unexpected char -1 at (line no=1, column no=33321, offset=33320)\n    at com.sun.faces.facelets.el.TagValueExpression.getValue(TagValueExpression.java:77)\n    at jakarta.faces.component.ComponentStateHelper.eval(ComponentStateHelper.java:207)\n    at jakarta.faces.component.ComponentStateHelper.eval(ComponentStateHelper.java:176)\n    at jakarta.faces.component.UIOutput.getValue(UIOutput.java:134)\n    at com.sun.faces.renderkit.html_basic.HtmlBasicInputRenderer.getValue(HtmlBasicInputRenderer.java:163)\n    at com.sun.faces.renderkit.html_basic.HtmlBasicRenderer.getCurrentValue(HtmlBasicRenderer.java:303)\n    at com.sun.faces.renderkit.html_basic.HtmlBasicRenderer.encodeEnd(HtmlBasicRenderer.java:135)\n    at jakarta.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:586)\n    at jakarta.faces.component.UIComponent.encodeAll(UIComponent.java:1442)\n    at jakarta.faces.component.UIComponent.encodeAll(UIComponent.java:1438)\n    at jakarta.faces.component.UIComponent.encodeAll(UIComponent.java:1438)\n    at org.primefaces.renderkit.HeadRenderer.encodeBegin(HeadRenderer.java:83)\n    at jakarta.faces.component.UIComponentBase.encodeBegin(UIComponentBase.java:531)\n    at jakarta.faces.component.UIComponent.encodeAll(UIComponent.java:1432)\n    at jakarta.faces.component.UIComponent.encodeAll(UIComponent.java:1438)\n    at com.sun.faces.application.view.FaceletViewHandlingStrategy.renderView(FaceletViewHandlingStrategy.java:442)\n    at com.sun.faces.application.view.MultiViewHandler.renderView(MultiViewHandler.java:162)\n    at jakarta.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:125)\n    at jakarta.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:125)\n    at jakarta.faces.application.ViewHandlerWrapper.renderView(ViewHandlerWrapper.java:125)\n    at org.omnifaces.viewhandler.OmniViewHandler.renderView(OmniViewHandler.java:151)\n    at com.sun.faces.lifecycle.RenderResponsePhase.execute(RenderResponsePhase.java:93)\n    at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:72)\n    at com.sun.faces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:178)\n    at jakarta.faces.webapp.FacesServlet.executeLifecyle(FacesServlet.java:692)\n    at jakarta.faces.webapp.FacesServlet.service(FacesServlet.java:449)\n    at org.apache.catalina.core.StandardWrapper.service(StandardWrapper.java:1554)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:331)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:211)\n    at org.glassfish.tyrus.servlet.TyrusServletFilter.doFilter(TyrusServletFilter.java:83)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:253)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:211)\n    at org.ocpsoft.rewrite.servlet.RewriteFilter.doFilter(RewriteFilter.java:226)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:253)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:211)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:257)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:166)\n    at org.apache.catalina.core.StandardPipeline.doInvoke(StandardPipeline.java:757)\n    at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:577)\n    at com.sun.enterprise.web.WebPipeline.invoke(WebPipeline.java:99)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:158)\n    at org.apache.catalina.connector.CoyoteAdapter.doService(CoyoteAdapter.java:372)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:239)\n    at com.sun.enterprise.v3.services.impl.ContainerMapper$HttpHandlerCallable.call(ContainerMapper.java:520)\n    at com.sun.enterprise.v3.services.impl.ContainerMapper.service(ContainerMapper.java:217)\n    at org.glassfish.grizzly.http.server.HttpHandler.runService(HttpHandler.java:174)\n    at org.glassfish.grizzly.http.server.HttpHandler.doHandle(HttpHandler.java:153)\n    at org.glassfish.grizzly.http.server.HttpServerFilter.handleRead(HttpServerFilter.java:196)\n    at org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:88)\n    at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:246)\n    at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:178)\n    at org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:118)\n    at org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:96)\n    at org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:51)\n    at org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:510)\n    at org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:82)\n    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:83)\n    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy$WorkerThreadRunnable.run(WorkerThreadIOStrategy.java:101)\n    at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:535)\n    at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:515)\n    at java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: jakarta.el.ELException: jakarta.json.stream.JsonParsingException: Unexpected char -1 at (line no=1, column no=33321, offset=33320)\n    at jakarta.el.BeanELResolver.getValue(BeanELResolver.java:351)\n    at com.sun.faces.el.DemuxCompositeELResolver._getValue(DemuxCompositeELResolver.java:139)\n    at com.sun.faces.el.DemuxCompositeELResolver.getValue(DemuxCompositeELResolver.java:164)\n    at org.glassfish.expressly.parser.AstValue.getValue(AstValue.java:302)\n    at org.glassfish.expressly.parser.AstValue.getValue(AstValue.java:144)\n    at org.glassfish.expressly.ValueExpressionImpl.getValue(ValueExpressionImpl.java:138)\n    at org.jboss.weld.module.web.el.WeldValueExpression.getValue(WeldValueExpression.java:50)\n    at com.sun.faces.facelets.el.TagValueExpression.getValue(TagValueExpression.java:73)\n    ... 60 more\nCaused by: jakarta.json.stream.JsonParsingException: Unexpected char -1 at (line no=1, column no=33321, offset=33320)\n    at org.eclipse.parsson.JsonTokenizer.unexpectedChar(JsonTokenizer.java:593)\n    at org.eclipse.parsson.JsonTokenizer.readString(JsonTokenizer.java:166)\n    at org.eclipse.parsson.JsonTokenizer.nextToken(JsonTokenizer.java:356)\n    at org.eclipse.parsson.JsonParserImpl$ObjectContext.getNextEvent(JsonParserImpl.java:486)\n    at org.eclipse.parsson.JsonParserImpl.next(JsonParserImpl.java:363)\n    at org.eclipse.parsson.JsonParserImpl.getObject(JsonParserImpl.java:327)\n    at org.eclipse.parsson.JsonParserImpl.getValue(JsonParserImpl.java:161)\n    at org.eclipse.parsson.JsonParserImpl.getArray(JsonParserImpl.java:307)\n    at org.eclipse.parsson.JsonParserImpl.getValue(JsonParserImpl.java:159)\n    at org.eclipse.parsson.JsonParserImpl.getObject(JsonParserImpl.java:328)\n    at org.eclipse.parsson.JsonParserImpl.getObject(JsonParserImpl.java:152)\n    at org.eclipse.parsson.JsonReaderImpl.readObject(JsonReaderImpl.java:85)\n    at edu.harvard.iq.dataverse.util.json.JsonUtil.getJsonObject(JsonUtil.java:79)\n    at edu.harvard.iq.dataverse.export.InternalExportDataProvider.getDatasetSchemaDotOrg(InternalExportDataProvider.java:55)\n    at edu.harvard.iq.dataverse.export.SchemaDotOrgExporter.exportDataset(SchemaDotOrgExporter.java:79)\n    at edu.harvard.iq.dataverse.export.ExportService.cacheExport(ExportService.java:387)\n    at edu.harvard.iq.dataverse.export.ExportService.exportFormat(ExportService.java:324)\n    at edu.harvard.iq.dataverse.export.ExportService.getExport(ExportService.java:195)\n    at edu.harvard.iq.dataverse.export.ExportService.getExportAsString(ExportService.java:214)\n    at edu.harvard.iq.dataverse.DatasetPage.getJsonLd(DatasetPage.java:5974)\n    at jdk.internal.reflect.GeneratedMethodAccessor1509.invoke(Unknown Source)\n    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.base/java.lang.reflect.Method.invoke(Method.java:569)\n    at jakarta.el.BeanELResolver.getValue(BeanELResolver.java:346)\n    ... 67 more\n|#]\n</code></pre></div>\n<p>I could however access the complete dataset using API calls and verify it's integrity - just the web-based view was affected. A dump of the metadata JSON revealed that it contained over 60000 characters, while the error message reported an unexpected EOF already after position 33320.</p>\n<p>The metadata contained some very elaborate file descriptions which I modified to be more concise. After that, the dataset view could be successfully loaded again.</p>\n<p>My question now is: Is there a size limit that payara is able to ingest successfully as json stream? Is it even configurable?</p>",
        "id": 525844508,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750924564
    },
    {
        "content": "<p>Hmm, great question. I'm not aware of a size limit.</p>\n<p>I'm not seeing an EOF. Rather, I see <code>JsonParsingException: Unexpected char</code></p>\n<p>And it's being thrown from <code>InternalExportDataProvider.getDatasetSchemaDotOrg(InternalExportDataProvider.java:55)</code></p>\n<p>I wonder if we can reproduce this somehow? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> What version of Dataverse are you on, please?</p>",
        "id": 525879401,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1750936271
    },
    {
        "content": "<p>I digged into the Eclipse Parsson code already to see if there is a buffer size limit we might be hitting here.</p>",
        "id": 525880019,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750936511
    },
    {
        "content": "<p>I'm on v.6.5. Yeah it's not strictly an EOF, but the <code>Unexpected char -1</code> imho hints to a stream truncation. What I forgot to mention is that the metadata when dumped via API passes linting as valid JSON. I also do not see any suspicious character at the given position.</p>\n<p>I can reliably reproduce the issue once I create a dataset with metadata exceeding this character count.</p>",
        "id": 525880156,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750936555
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"867821\">@Alexander Minges</span> do you have the old descriptions around? It might be very interesting to try to manually find what the chars at position 33270 are. This might be a bad UTF-8 char thing.</p>",
        "id": 525880200,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750936568
    },
    {
        "content": "<p>Oh so this is not related to one specific string, but with any string that size?</p>",
        "id": 525880268,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750936593
    },
    {
        "content": "<p>So we should be able to create a unit test that blows up, right?</p>",
        "id": 525880360,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750936619
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598183\">Oliver Bertuch</span> <a href=\"#narrow/channel/378866-troubleshooting/topic/Large.20metadata.20prevents.20loading.20of.20dataset.20view/near/525880200\">schrieb</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"867821\">Alexander Minges</span> do you have the old descriptions around? It might be very interesting to try to manually find what the chars at position 33270 are. This might be a bad UTF-8 char thing.</p>\n<p>Oh so this is not related to one specific string, but with any string that size?</p>\n</blockquote>\n<p>Seems so. However I do have the original JSON if you are interested to have a look.</p>",
        "id": 525880465,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750936657
    },
    {
        "content": "<p>I also want to highlight that you are talking about two different things here. Retrieving the JSON via the API is different to using the API to retrieve the <a href=\"http://Schema.org\">Schema.org</a> JSON-LD, which does JSON-P parsing first!</p>",
        "id": 525880632,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750936717
    },
    {
        "content": "<p>Does it blow up if you're using the Export API as well? <a href=\"https://guides.dataverse.org/en/latest/api/native-api.html#export-metadata-of-a-dataset-in-various-formats\">https://guides.dataverse.org/en/latest/api/native-api.html#export-metadata-of-a-dataset-in-various-formats</a></p>\n<p>So you'd use sth like <a href=\"https://demo.dataverse.org/api/datasets/export?exporter=schema.org&amp;persistentId=doi:10.70122/FK2/WRYRT4\">https://demo.dataverse.org/api/datasets/export?exporter=schema.org&amp;persistentId=doi:10.70122/FK2/WRYRT4</a></p>",
        "id": 525880837,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750936790
    },
    {
        "content": "<p>I'll check that.</p>",
        "id": 525881057,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750936866
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"867821\">@Alexander Minges</span> did you try to blow things up with some other random, very long thing to see if the culprit is indeed the specific dataset or if we are in bigger trouble?</p>",
        "id": 525881988,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750937188
    },
    {
        "content": "<p>BTW <span class=\"user-mention\" data-user-id=\"598112\">@Philip Durbin</span> <span class=\"user-mention\" data-user-id=\"637063\">@Leo Andreev</span> I did not expect that the <a href=\"http://schema.org\">schema.org</a> exporter is called every time a dataset page is loaded - shouldn't it use the cached export?</p>",
        "id": 525882352,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750937309
    },
    {
        "content": "<p>Not yet, but I more or less randomly removed metadata to shrink the size. But I can check that as well with some very long random stuff in a fresh dataset.</p>",
        "id": 525882353,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750937310
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598183\">@Oliver Bertuch</span> was the <a href=\"http://schema.org\">schema.org</a> export ever successfully cached?</p>",
        "id": 525882603,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1750937409
    },
    {
        "content": "<p>I wasn't aware it would not be cached!</p>",
        "id": 525882656,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750937437
    },
    {
        "content": "<p>If no exception is thrown, it should be cached and re-used.</p>",
        "id": 525882848,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1750937509
    },
    {
        "content": "<p>That's how the rest of the exports work, at least.</p>",
        "id": 525882999,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1750937569
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598112\">Philip Durbin</span> <a href=\"#narrow/channel/378866-troubleshooting/topic/Large.20metadata.20prevents.20loading.20of.20dataset.20view/near/525882848\">schrieb</a>:</p>\n<blockquote>\n<p>If no exception is thrown, it should be cached and re-used.</p>\n</blockquote>\n<p>But I would only see that in the logs, once a dataset is published, right?</p>",
        "id": 525883006,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750937573
    },
    {
        "content": "<p>Maybe? I'm not sure if you'd see \"export successful\" or whatever.</p>",
        "id": 525883103,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1750937610
    },
    {
        "content": "<p>I agree that having this case in a unit test would be nice. For now, maybe we could throw it it <a href=\"https://github.com/IQSS/dataverse-sample-data\">https://github.com/IQSS/dataverse-sample-data</a></p>",
        "id": 525883205,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1750937651
    },
    {
        "content": "<p>But at least the initial caching would happen only if you hit publish. (Except from re-exports triggered from new versions, API, etc)</p>",
        "id": 525883219,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750937658
    },
    {
        "content": "<p>There is a unit test for a very very long description, <a href=\"https://github.com/IQSS/dataverse/pull/9085\">Jim did that</a>.</p>",
        "id": 525883307,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750937689
    },
    {
        "content": "<p>Digging through the code when some field may be truncated.</p>",
        "id": 525883381,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750937710
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"867821\">@Alexander Minges</span> I'd be curious to know if switching to Croissant helps. We put it in the <code>&lt;head&gt;</code> if that exporter is enabled: <a href=\"https://guides.dataverse.org/en/6.6/admin/discoverability.html#schema-org-json-ld-croissant-metadata\">https://guides.dataverse.org/en/6.6/admin/discoverability.html#schema-org-json-ld-croissant-metadata</a></p>",
        "id": 525883517,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1750937759
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"867821\">@Alexander Minges</span> could you upload the original JSON here as a file? Only \"description\" of the dataset get's truncated, so maybe we need to extend that.</p>",
        "id": 525883839,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750937895
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598112\">@Philip Durbin</span>  I'll try that as well, but first I'll check whether something in this specific dataset blows up the <a href=\"http://schema.org\">schema.org</a> export and I just deleted that party by chance when trying to lower the size.</p>",
        "id": 525883870,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750937912
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598183\">Oliver Bertuch</span> <a href=\"#narrow/channel/378866-troubleshooting/topic/Large.20metadata.20prevents.20loading.20of.20dataset.20view/near/525883839\">schrieb</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"867821\">Alexander Minges</span> could you upload the original JSON here as a file? Only \"description\" of the dataset get's truncated, so maybe we need to extend that.</p>\n</blockquote>\n<p>You mean the <a href=\"http://schema.org\">schema.org</a> JSON-LD or the Dataverse JSON?</p>",
        "id": 525884033,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750937994
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"867821\">Alexander Minges</span> <a href=\"#narrow/channel/378866-troubleshooting/topic/Large.20metadata.20prevents.20loading.20of.20dataset.20view/near/525884033\">said</a>:</p>\n<blockquote>\n<p>You mean the <a href=\"http://schema.org\">schema.org</a> JSON-LD or the Dataverse JSON?</p>\n</blockquote>\n<p>The Dataverse JSON</p>",
        "id": 525884504,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750938179
    },
    {
        "content": "<p>So I extend the unit test for SchemaDotOrgExporter to test with a file description using 2^18 chars (<code>testExportVeryLongFileDescription</code>, see attached). Didn't blow up. Would be good to see your metadata <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> <br>\n<a href=\"/user_uploads/53090/bQCQHVXwkkQkabyo4yONzETb/SchemaDotOrgExporterTest.java\">SchemaDotOrgExporterTest.java</a></p>",
        "id": 525887388,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750939162
    },
    {
        "content": "<p>Wow even if I smuggle in a \"-1\" character, I can't break it! Something very very very weird must be going on here!</p>",
        "id": 525889783,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750939878
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598183\">@Oliver Bertuch</span> I've sent you the JSON as direct message. Btw the <a href=\"http://schema.org\">schema.org</a> export blows up as well using the API. When I remove the descriptions of the attached files the export is generated without issues.</p>",
        "id": 525890609,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750940110
    },
    {
        "content": "<p>I will try to rope the JSON into the unit test and see if I can reproduce it locally.</p>",
        "id": 525890927,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750940220
    },
    {
        "content": "<p>Man have I ever mentioned what a bloody mess it is when you try to parse a dataset JSON into a testcase? Our testing infrastructure is way to complicated. Too many implicits, etc...</p>",
        "id": 525899544,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750942911
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598183\">@Oliver Bertuch</span> maybe you should warm up this thread with <span class=\"user-mention\" data-user-id=\"690603\">@Gustavo Durand</span> about automated testing: <a href=\"https://groups.google.com/g/dataverse-dev/c/k6nZ_icK9fw/m/Qf6f2-NJEgAJ\">https://groups.google.com/g/dataverse-dev/c/k6nZ_icK9fw/m/Qf6f2-NJEgAJ</a> (or start a new topic in <a class=\"stream\" data-stream-id=\"379673\" href=\"/#narrow/channel/379673-dev\">#dev</a>, or both <span aria-label=\"smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"smile\">:smile:</span> )</p>",
        "id": 525900722,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1750943266
    },
    {
        "content": "<p>Wow. Our JSON Parser does not parse the releasedDate if presented. Man not using JSON-B for all of this sux</p>",
        "id": 525902247,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750943726
    },
    {
        "content": "<p>I just discovered a long lasting bug in Dataverse. And another occasion of \"why use JSON-B if doing it all manually is so much more fun!!!!!!!!!!11111111\"</p>",
        "id": 525903212,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750943993
    },
    {
        "content": "<p>In JsonPrinter, the release time of a dataset version is <a href=\"https://github.com/poikilotherm/dataverse/blob/cce40c43cb082b98f9ee62d74f22b01e23d27a19/src/main/java/edu/harvard/iq/dataverse/util/json/JsonPrinter.java#L490-L490\">set as \"releaseTime\"</a>.</p>",
        "id": 525903316,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750944013
    },
    {
        "content": "<p>Guess what it is in JsonParser...?</p>",
        "id": 525903599,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750944075
    },
    {
        "content": "<p><a href=\"https://github.com/poikilotherm/dataverse/blob/cce40c43cb082b98f9ee62d74f22b01e23d27a19/src/main/java/edu/harvard/iq/dataverse/util/json/JsonParser.java#L444-L444\">YES YOU'RE RIGHT IT'S FRICKIN' <code>releaseDate</code>!!!11!11122345</a></p>",
        "id": 525903725,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750944104
    },
    {
        "content": "<p>So, I <strong>finally</strong> <span aria-label=\"trumpet\" class=\"emoji emoji-1f3ba\" role=\"img\" title=\"trumpet\">:trumpet:</span> are able to verify the issue locally!!!</p>",
        "id": 525904559,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750944341
    },
    {
        "content": "<p>I see <code>jakarta.json.stream.JsonParsingException: Unexpected char -1 at (line no=1, column no=33239, offset=33238)</code> in the test output!</p>",
        "id": 525904660,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750944373
    },
    {
        "content": "<p>So the file description length is really the culprit?</p>",
        "id": 525905408,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750944581
    },
    {
        "content": "<p>Not sure yet - I tested the length with a 2^18 char string and it was fine. I still suspect a bad char and now I can finally check out where exactly the problem is!</p>",
        "id": 525905637,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750944635
    },
    {
        "content": "<p>When I extract the text surrounding the failing location, I see nothing special...</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span><span class=\"nv\">TEXT</span><span class=\"o\">=</span><span class=\"k\">$(</span>cat<span class=\"w\"> </span>src/test/resources/json/dataset-breaking-desc-pretty.json<span class=\"k\">)</span>\n$\n$<span class=\"w\"> </span><span class=\"nb\">printf</span><span class=\"w\"> </span><span class=\"s1\">'%q\\n'</span><span class=\"w\"> </span><span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">TEXT</span><span class=\"p\">[33000,34000]</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"se\">\\ </span>their<span class=\"se\">\\ </span>designated<span class=\"se\">\\ </span>target<span class=\"se\">\\ </span>LC3<span class=\"se\">\\ </span>using<span class=\"se\">\\ </span>a<span class=\"se\">\\ </span>diversity<span class=\"se\">\\ </span>of<span class=\"se\">\\ </span>biophysical<span class=\"se\">\\ </span>methods.<span class=\"se\">\\ </span>Intrigued<span class=\"se\">\\ </span>by<span class=\"se\">\\ </span>the<span class=\"se\">\\ </span>idea<span class=\"se\">\\ </span>of<span class=\"se\">\\ </span>developing<span class=\"se\">\\ </span>ATTECs,<span class=\"se\">\\ </span>we<span class=\"se\">\\ </span>evaluated<span class=\"se\">\\ </span>the<span class=\"se\">\\ </span>ligandability<span class=\"se\">\\ </span>of<span class=\"se\">\\ </span>LC3/GABARAP<span class=\"se\">\\ </span>by<span class=\"se\">\\ </span><span class=\"k\">in</span><span class=\"se\">\\ </span>silico<span class=\"se\">\\ </span>docking<span class=\"se\">\\ </span>and<span class=\"se\">\\ </span>large-scale<span class=\"se\">\\ </span>crystallographic<span class=\"se\">\\ </span>fragment<span class=\"se\">\\ </span>screening.<span class=\"se\">\\ </span>Data<span class=\"se\">\\ </span>based<span class=\"se\">\\ </span>on<span class=\"se\">\\ </span>approximately<span class=\"se\">\\ </span><span class=\"m\">1000</span><span class=\"se\">\\ </span>crystal<span class=\"se\">\\ </span>structures<span class=\"se\">\\ </span>revealed<span class=\"se\">\\ </span>that<span class=\"se\">\\ </span>most<span class=\"se\">\\ </span>fragments<span class=\"se\">\\ </span>bound<span class=\"se\">\\ </span>to<span class=\"se\">\\ </span>the<span class=\"se\">\\ </span>HP2<span class=\"se\">\\ </span>but<span class=\"se\">\\ </span>not<span class=\"se\">\\ </span>to<span class=\"se\">\\ </span>the<span class=\"se\">\\ </span>HP1<span class=\"se\">\\ </span>pocket<span class=\"se\">\\ </span>within<span class=\"se\">\\ </span>the<span class=\"se\">\\ </span>LIR<span class=\"se\">\\ </span>docking<span class=\"se\">\\ </span>site,<span class=\"se\">\\ </span>suggesting<span class=\"se\">\\ </span>a<span class=\"se\">\\ </span>favorable<span class=\"se\">\\ </span>ligandability<span class=\"se\">\\ </span>of<span class=\"se\">\\ </span>HP2.<span class=\"se\">\\ </span>Through<span class=\"se\">\\ </span>this<span class=\"se\">\\ </span>study,<span class=\"se\">\\ </span>we<span class=\"se\">\\ </span>identified<span class=\"se\">\\ </span>diverse<span class=\"se\">\\ </span>validated<span class=\"se\">\\ </span>LC3/GABARAP<span class=\"se\">\\ </span>ligands<span class=\"se\">\\ </span>and<span class=\"se\">\\ </span>fragments<span class=\"se\">\\ </span>as<span class=\"se\">\\ </span>starting<span class=\"se\">\\ </span>points<span class=\"se\">\\ </span><span class=\"k\">for</span><span class=\"se\">\\ </span>chemical<span class=\"se\">\\ </span>probe<span class=\"se\">\\ </span>and<span class=\"se\">\\ </span>ATTEC<span class=\"se\">\\ </span>development.<span class=\"se\">\\&lt;</span>/p<span class=\"se\">\\&gt;\\\"</span><span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\}</span><span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\}</span><span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\]</span><span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\}</span>,<span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\{</span><span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\"</span>typeName<span class=\"se\">\\\"</span>:<span class=\"se\">\\ \\\"</span>subject<span class=\"se\">\\\"</span>,<span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\"</span>multiple<span class=\"se\">\\\"</span>:<span class=\"se\">\\ </span>true,<span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\"</span>typeClass<span class=\"se\">\\\"</span>:<span class=\"se\">\\ \\\"</span>controlledVocabulary<span class=\"se\">\\\"</span>,<span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\"</span>value<span class=\"se\">\\\"</span>:<span class=\"se\">\\ \\[</span><span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\"</span>Medicine,<span class=\"se\">\\ </span>Health<span class=\"se\">\\ </span>and<span class=\"se\">\\ </span>Life<span class=\"se\">\\ </span>Sciences<span class=\"se\">\\\"</span><span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\]</span><span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\}</span>,<span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\{</span><span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\"</span>typeName<span class=\"se\">\\\"</span>:<span class=\"se\">\\ \\\"</span>keyword<span class=\"se\">\\\"</span>,<span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\"</span>multiple<span class=\"se\">\\\"</span>:<span class=\"se\">\\ </span>true,<span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\"</span>typeClass<span class=\"se\">\\\"</span>:<span class=\"se\">\\ \\\"</span>compound<span class=\"se\">\\\"</span>,<span class=\"s1\">$'\\n'</span><span class=\"se\">\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\"</span>v\n$\n$<span class=\"w\"> </span><span class=\"nb\">printf</span><span class=\"w\"> </span><span class=\"s1\">'%q\\n'</span><span class=\"w\"> </span><span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">TEXT</span><span class=\"p\">[33230,33250]</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\ning.<span class=\"se\">\\ </span>Data<span class=\"se\">\\ </span>based<span class=\"se\">\\ </span>on<span class=\"se\">\\ </span>ap\n</code></pre></div>",
        "id": 525908356,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750945429
    },
    {
        "content": "<p>So the problem must be within the transformed JSON the exporter uses. Let me extract that...</p>",
        "id": 525909978,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750945958
    },
    {
        "content": "<p>go go go!</p>",
        "id": 525910039,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1750945979
    },
    {
        "content": "<p>So. Figure 4 is the culprit... Let's see if I can find any bad chars in the source file...</p>",
        "id": 525912062,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750946544
    },
    {
        "content": "<p>I also dug a bit deeper and found some Unicode chars depicting alternate dashes (such as <code>U+2013</code>). But replacing all of them doesn't fix the issue. I also tried adding the file descriptions one by one and for me it blows up at Fig 2 already...</p>",
        "id": 525912805,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750946746
    },
    {
        "content": "<p>I don't see any particularly problematic things in the source file at the position where things blow up...</p>",
        "id": 525913858,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750947037
    },
    {
        "content": "<p>Can you reproduce the original bug if you create a dataset via API based on the JSON?</p>",
        "id": 525914116,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1750947115
    },
    {
        "content": "<p>Wait a minute!</p>",
        "id": 525914228,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750947139
    },
    {
        "content": "<p><del>But it's definitely not directly related to the length of the json. Adding description for Fig. 1 is fine... Fig1 + Fig 2 blows up, but descriptions for Fig 1 + Fig 3 are fine, however the resulting json is much larger than the the 33200 chars we hit in the errors</del></p>\n<p>Forget it, I opened the old version by accident. 1 + 3 also does not work.</p>",
        "id": 525914306,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750947166
    },
    {
        "content": "<p>I think I just made progress. The JSON-LD string simply ENDS at this place!</p>",
        "id": 525914326,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750947172
    },
    {
        "content": "<p>So the -1 is indeed the EOF marker!</p>",
        "id": 525914345,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750947179
    },
    {
        "content": "<p>So there must be a problem during the <em>generation</em> of the JSON-LD!</p>",
        "id": 525914425,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750947199
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>(line no=1, column no=33239, offset=33238)\n(length=33239)\ning of the CSP values. Residues with small (CSP &lt; SD), intermediate (SD &lt; CSP &lt;2xSD) or strong (2xS\n\njakarta.json.stream.JsonParsingException: Invalid token=EOF at (line no=1, column no=0, offset=-1). Expected tokens are: [CURLYOPEN, SQUAREOPEN, STRING, NUMBER, TRUE, FALSE, NULL]\n</code></pre></div>",
        "id": 525914583,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750947242
    },
    {
        "content": "<p>I'm not sure what upsets it, as I tested it with way longer strings and all was fine.</p>",
        "id": 525914746,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750947289
    },
    {
        "content": "<p>And the next char there would be a <code>D</code> again, so nothing spectacular: <code>or strong (2xSD &lt;CSP) CSP</code></p>",
        "id": 525914904,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750947332
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598183\">Oliver Bertuch</span> <a href=\"#narrow/channel/378866-troubleshooting/topic/Large.20metadata.20prevents.20loading.20of.20dataset.20view/near/525914425\">schrieb</a>:</p>\n<blockquote>\n<p>So there must be a problem during the <em>generation</em> of the JSON-LD!</p>\n</blockquote>\n<p>And because this fails during initial publication, it is tried again and again when trying to view the dataset because no cached version exists. Once I get it into a non-broken state (e.g. by just deleting the files, thus creating a new DRAFT version), I can access all the older (published) and presumably broken versions from the version history just fine. What <em>still</em> fails for them is exporting to JSON-LD from the frontend:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"nt\">\"status\"</span><span class=\"p\">:</span><span class=\"s2\">\"ERROR\"</span><span class=\"p\">,</span><span class=\"nt\">\"message\"</span><span class=\"p\">:</span><span class=\"s2\">\"Export Failed\"</span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 525915591,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750947527
    },
    {
        "content": "<p>So, it fails to add all the bits for the files. We know where that is in the code.</p>",
        "id": 525915954,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750947633
    },
    {
        "content": "<p>So are we leaning toward certain characters being a problem? Not the length?</p>",
        "id": 525915993,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1750947644
    },
    {
        "content": "<p>I'm not sure yet</p>",
        "id": 525916031,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750947658
    },
    {
        "content": "<p>Smells like we might be opening a can of worms here.</p>",
        "id": 525916092,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750947673
    },
    {
        "content": "<p>Yep. The <code>MarkupChecker.stripAllTags(jsonLd)</code> strips too much of the JSON-LD.<br>\nBefore:<br>\n<a href=\"/user_uploads/53090/oZKyDi1ep28uAcfJbENffTHa/image.png\">image.png</a><br>\nAfter:<br>\n<a href=\"/user_uploads/53090/SCMTQrFwZmC7kutOEKmD0JJW/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/53090/oZKyDi1ep28uAcfJbENffTHa/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1262x638\" src=\"/user_uploads/thumbnail/53090/oZKyDi1ep28uAcfJbENffTHa/image.png/840x560.webp\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/53090/SCMTQrFwZmC7kutOEKmD0JJW/image.png\" title=\"image.png\"><img data-original-content-type=\"image/png\" data-original-dimensions=\"1262x638\" src=\"/user_uploads/thumbnail/53090/SCMTQrFwZmC7kutOEKmD0JJW/image.png/840x560.webp\"></a></div>",
        "id": 525918293,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750948253
    },
    {
        "content": "<p>The test executed successfully if I remove the markupchecker from the equation</p>",
        "id": 525918455,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750948304
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"867821\">@Alexander Minges</span> would you mind creating an issue?</p>",
        "id": 525918518,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750948319
    },
    {
        "content": "<p>This is where things go wrong: <a href=\"https://github.com/poikilotherm/dataverse/blob/cce40c43cb082b98f9ee62d74f22b01e23d27a19/src/main/java/edu/harvard/iq/dataverse/DatasetVersion.java#L2150-L2150\">https://github.com/poikilotherm/dataverse/blob/cce40c43cb082b98f9ee62d74f22b01e23d27a19/src/main/java/edu/harvard/iq/dataverse/DatasetVersion.java#L2150-L2150</a></p>",
        "id": 525918585,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750948338
    },
    {
        "content": "<p>I need to attend to kids logistics now.</p>",
        "id": 525918642,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750948357
    },
    {
        "content": "<p>It's not you, it's us <span aria-label=\"smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 525918705,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750948378
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598183\">Oliver Bertuch</span> <a href=\"#narrow/channel/378866-troubleshooting/topic/Large.20metadata.20prevents.20loading.20of.20dataset.20view/near/525918518\">schrieb</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"867821\">Alexander Minges</span> would you mind creating an issue?</p>\n</blockquote>\n<p>Sure, I'll create one. Not sure if I'll get to do it today (leaving the office right now), but latest tomorrow morning. <span class=\"user-mention\" data-user-id=\"598183\">@Oliver Bertuch</span> Thanks for digging through this mess of mine <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span></p>",
        "id": 525919617,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750948627
    },
    {
        "content": "<p>So I guess something like <code>&lt;CSP</code> in <code>(2xSD &lt;CSP)</code> might be mistaken for an open HTML tag and due to a \"missing\" closing bracket, everything afterwards gets cut off?</p>",
        "id": 525920365,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1750948826
    },
    {
        "content": "<p>Gotcha. I hope we can find a small case that exercises the bug.</p>",
        "id": 525923704,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1750949739
    },
    {
        "content": "<p>I will look into creating a minimal test case as a reproducer to also verify the root cause is mitigated with the fix.</p>",
        "id": 525925720,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750950222
    },
    {
        "content": "<p>But not today <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 525925758,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750950231
    },
    {
        "content": "<p>Can't even create a branch yet - no issue number <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span></p>",
        "id": 525925827,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750950244
    },
    {
        "content": "<p>I did create an issue just now for the releaseTime vs releaseDate snag. <a href=\"https://github.com/IQSS/dataverse/issues/11594\">https://github.com/IQSS/dataverse/issues/11594</a></p>",
        "id": 525933436,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1750952479
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598183\">@Oliver Bertuch</span> I'm currently creating the issue. To trigger the bug, it's sufficient to add <code>&lt;CSP</code> to the file description. Something arbitrary like <code>&lt;test</code> did not blow up though.</p>",
        "id": 526025081,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1751008503
    },
    {
        "content": "<p>Issue is created: <a href=\"https://github.com/IQSS/dataverse/issues/11597\">https://github.com/IQSS/dataverse/issues/11597</a></p>",
        "id": 526026622,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1751009249
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"867821\">@Alexander Minges</span> thanks! <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 526066011,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1751024566
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"867821\">@Alexander Minges</span> thanks for PR <a href=\"https://github.com/IQSS/dataverse/issues/11600\">#11600</a>! I just left a comment there.</p>",
        "id": 526840181,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1751473628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598112\">@Philip Durbin 🚀</span> You're welcome! If I can help in any way to add a test for this, please let me know.</p>",
        "id": 527119714,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1751612917
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"867821\">@Alexander Minges</span> sure! Have you run any API tests yet? Maybe you could try running <code>mvn test -Dtest=UsersIT</code> from <a href=\"https://guides.dataverse.org/en/6.6/developers/testing.html#writing-api-tests-with-rest-assured\">https://guides.dataverse.org/en/6.6/developers/testing.html#writing-api-tests-with-rest-assured</a></p>",
        "id": 527456727,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1751887327
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598112\">@Philip Durbin 🚀</span> Not yet. I'll probably have time to do this end of this week.</p>",
        "id": 528610991,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1752482227
    },
    {
        "content": "<p>No rush, thanks.</p>",
        "id": 528666889,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1752500839
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598112\">@Philip Durbin 🚀</span>  Test is available, see my comment in the PR: <a href=\"https://github.com/IQSS/dataverse/pull/11600#issuecomment-3112181778\">https://github.com/IQSS/dataverse/pull/11600#issuecomment-3112181778</a></p>",
        "id": 530495386,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1753343321
    },
    {
        "content": "<p>Fantastic! Thanks! I'll take a look.</p>",
        "id": 530544963,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1753358762
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"867821\">@Alexander Minges</span> oh, it's in a different branch. Please go ahead and put it in the branch for your PR.</p>",
        "id": 530545145,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1753358800
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598112\">Philip Durbin 🚀</span> <a href=\"#narrow/channel/378866-troubleshooting/topic/Incomplete.20HTML.20tags.20prevent.20loading.20of.20dataset.20view/near/530545145\">schrieb</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"867821\">Alexander Minges</span> oh, it's in a different branch. Please go ahead and put it in the branch for your PR.</p>\n</blockquote>\n<p>Done. No idea what jenkins is complaining about though as I cannot access the respective CI details.</p>",
        "id": 531576997,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1753786739
    },
    {
        "content": "<p>Yeah, that's what this is about, sadly:</p>\n<p>Let contributors know why tests are failing <a href=\"https://github.com/IQSS/dataverse/issues/9916\">#9916</a></p>",
        "id": 531587779,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1753789847
    },
    {
        "content": "<p>I've been a bit heads down on a new notifications API (<a class=\"stream-topic\" data-stream-id=\"379673\" href=\"/#narrow/channel/379673-dev/topic/Notifications.20API.20usage.20and.20future/with/531389398\">#dev &gt; Notifications API usage and future</a>) but I'll try to look at your PR soon. Thanks for adding tests!</p>",
        "id": 531587892,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1753789882
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"867821\">@Alexander Minges</span> here's the complaint:</p>\n<div class=\"codehilite\"><pre><span></span><code>Error\n1 expectation failed.\nExpected status code &lt;200&gt; but was &lt;403&gt;.\nStacktrace\njava.lang.AssertionError:\n1 expectation failed.\nExpected status code &lt;200&gt; but was &lt;403&gt;.\n    at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n    at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n    at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\n    at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\n    at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\n    at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\n    at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\n    at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\n    at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\n    at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\n    at jdk.internal.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)\n    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.base/java.lang.reflect.Method.invoke(Method.java:569)\n    at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\n    at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\n    at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\n    at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\n    at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)\n    at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)\n    at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)\n    at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)\n    at edu.harvard.iq.dataverse.api.JsonLDExportIT.testJsonLDExportWithIncompleteHtmlTagsInFileDescription(JsonLDExportIT.java:88)\n    at java.base/java.lang.reflect.Method.invoke(Method.java:569)\n    at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n    at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\nStandard Error\nJul 28, 2025 1:02:23 PM edu.harvard.iq.dataverse.api.UtilIT getRestAssuredBaseUri\nINFO: Base URL for tests: http://localhost:8080\nJul 28, 2025 1:02:23 PM edu.harvard.iq.dataverse.api.UtilIT createRandomUser\nINFO: Creating random test user user3614cf35\nJul 28, 2025 1:02:24 PM edu.harvard.iq.dataverse.api.UtilIT getApiTokenFromResponse\nINFO: API token found in create user response: 1dc8f8a1-73c8-4dda-9e86-25e9dd6d01e0\nJul 28, 2025 1:02:24 PM edu.harvard.iq.dataverse.api.UtilIT getUsernameFromResponse\nINFO: Username found in create user response: user3614cf35\nJul 28, 2025 1:02:24 PM edu.harvard.iq.dataverse.api.UtilIT getAliasFromResponse\nINFO: Alias found in create dataverse response: dv1edbd9e9\nJul 28, 2025 1:02:24 PM edu.harvard.iq.dataverse.api.UtilIT getDatasetIdFromResponse\nINFO: Id found in create dataset response: 317\nJul 28, 2025 1:02:24 PM edu.harvard.iq.dataverse.api.UtilIT getDatasetPersistentIdFromResponse\nINFO: Persistent id found in create dataset response: doi:10.5072/FK2/YFGBI7\n</code></pre></div>",
        "id": 531601915,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1753793754
    },
    {
        "content": "<p>Ah, this is why:</p>\n<p>\"This dataset is locked. Reason: Ingest. Please try publishing later.\"</p>",
        "id": 531672472,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1753812918
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"867821\">@Alexander Minges</span> ok, I pushed a fix: <a href=\"https://github.com/IQSS/dataverse/pull/11600/commits/767a191455e22550944c23f616eb6302da0a5fa5\">https://github.com/IQSS/dataverse/pull/11600/commits/767a191455e22550944c23f616eb6302da0a5fa5</a></p>",
        "id": 531674780,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1753813738
    },
    {
        "content": "<p>I'll wait for the API tests to pass before moving it to QA.</p>",
        "id": 531674844,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1753813757
    },
    {
        "content": "<p>Crap, I was trying to get fancy by following <a href=\"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/checking-out-pull-requests-locally\">https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/checking-out-pull-requests-locally</a> instead of adding a remote with <code>git remote add Athemis git@github.com:Athemis/dataverse.git</code> like I usually do. But now I'm worried I screwed up your branch, <span class=\"user-mention\" data-user-id=\"867821\">@Alexander Minges</span> </p>\n<p><a href=\"https://github.com/IQSS/dataverse/actions/runs/16604285701/job/46972337687?pr=11600\">https://github.com/IQSS/dataverse/actions/runs/16604285701/job/46972337687?pr=11600</a> says \"Error: fatal: couldn't find remote ref refs/heads/fix-json-ld\" <span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span> </p>\n<p>Sorry! Do you think we can fix it? Or should you create a fresh PR?</p>",
        "id": 531677872,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1753814947
    },
    {
        "content": "<p>Ok, I force pushed to your branch. Fingers crossed! <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 531678674,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1753815275
    },
    {
        "content": "<p>Ok, good, it's getting farther.</p>",
        "id": 531679218,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1753815484
    },
    {
        "content": "<p>Anything else I can do to help with this PR? I've seen tha it's been iterating over several Sprints now.</p>",
        "id": 534933294,
        "sender_full_name": "Alexander Minges",
        "timestamp": 1755517970
    },
    {
        "content": "<p>Let's see, <a href=\"https://github.com/IQSS/dataverse/issues/11600\">#11600</a> is in QA. <span class=\"user-mention\" data-user-id=\"760290\">@Omer M Fahim</span> do you have any questions about it?</p>",
        "id": 534947406,
        "sender_full_name": "Philip Durbin 🚀",
        "timestamp": 1755522141
    },
    {
        "content": "<p>This PR's good to go, going to merge shortly.</p>",
        "id": 534952490,
        "sender_full_name": "Omer M Fahim",
        "timestamp": 1755523674
    }
]