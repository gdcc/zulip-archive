[
    {
        "content": "<p>I have a web app which has a dashboard view running on <a href=\"http://my.domain1.com\">my.domain1.com</a>. In the dashboard view I provided an icon of dataverse (running on <a href=\"http://my.dataverse.com\">my.dataverse.com</a>). I have already enabled the OpenID for dataverse and it works fine. Is there any solution that I can provide the ability so that when the user clicks on the icon in my web app then the \"Login with OpenID\" in dataverse gets clicked, initiating the OpenID authentication?</p>",
        "id": 429603077,
        "sender_full_name": "Mohsen Jafari",
        "timestamp": 1711441349
    },
    {
        "content": "<p>What you are asking about is very similar to what the SPA is up to.</p>",
        "id": 429605162,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711442258
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598442\">@Guillermo Portas</span> I don't remember - could you login via API bearer token and get a session going? Because that's what you'd need, right?</p>",
        "id": 429605292,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711442305
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598183\">Oliver Bertuch</span> <a href=\"#narrow/stream/378866-troubleshooting/topic/Launch.20dataverse.20from.20another.20app/near/429605292\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"598442\">Guillermo Portas</span> I don't remember - could you login via API bearer token and get a session going? Because that's what you'd need, right?</p>\n</blockquote>\n<p>Could you explain more about this approach? Currently, my users can login via OpenID when they go to the dataverse app and initiate the login process from there. However, I have a dashboard app where users can launch all their apps, including dataverse. But I don't know how to initiate the OpenID login process from within my dashboard app.</p>",
        "id": 429606037,
        "sender_full_name": "Mohsen Jafari",
        "timestamp": 1711442564
    },
    {
        "content": "<p>The new SPA for Dataverse has a similar goal. They want to enable smooth switching between the old JSF UI and the new React SPA UI.</p>",
        "id": 429606353,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711442692
    },
    {
        "content": "<p>The necessary component for that is an OIDC provider, allowing a single place to log in at</p>",
        "id": 429606460,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711442720
    },
    {
        "content": "<p>Next, to enable logging in at the SPA and simply switchting to the JSF UI will require to create a session. So when you go from the SPA to the JSF UI, you don't login again.</p>",
        "id": 429606656,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711442784
    },
    {
        "content": "<p>That sounds very similar to what you're trying to do</p>",
        "id": 429606690,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711442795
    },
    {
        "content": "<p>But I don't know if this is already possible or if they are still working on that part.</p>",
        "id": 429606722,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711442811
    },
    {
        "content": "<p>Where is the \"SPA for Dataverse\"?</p>",
        "id": 429606785,
        "sender_full_name": "Mohsen Jafari",
        "timestamp": 1711442838
    },
    {
        "content": "<p>You can already use the API wit a bearer token from your OIDC provider</p>",
        "id": 429606811,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711442849
    },
    {
        "content": "<p>Development happens here: <a href=\"https://github.com/IQSS/dataverse-frontend\">https://github.com/IQSS/dataverse-frontend</a></p>",
        "id": 429606856,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711442874
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598183\">Oliver Bertuch</span> <a href=\"#narrow/stream/378866-troubleshooting/topic/Launch.20dataverse.20from.20another.20app/near/429606811\">said</a>:</p>\n<blockquote>\n<p>You can already use the API wit a bearer token from your OIDC provider</p>\n</blockquote>\n<p>Could you explain this a little bit, please.</p>",
        "id": 429606981,
        "sender_full_name": "Mohsen Jafari",
        "timestamp": 1711442916
    },
    {
        "content": "<p><a href=\"http://preview.guides.gdcc.io/en/develop/api/auth.html#bearer-tokens\">http://preview.guides.gdcc.io/en/develop/api/auth.html#bearer-tokens</a></p>",
        "id": 429607235,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711443022
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598183\">Oliver Bertuch</span> <a href=\"#narrow/stream/378866-troubleshooting/topic/Launch.20dataverse.20from.20another.20app/near/429607235\">said</a>:</p>\n<blockquote>\n<p><a href=\"http://preview.guides.gdcc.io/en/develop/api/auth.html#bearer-tokens\">http://preview.guides.gdcc.io/en/develop/api/auth.html#bearer-tokens</a></p>\n</blockquote>\n<p>It is not possible to use API Token instead of Bearer Token?</p>",
        "id": 429608737,
        "sender_full_name": "Mohsen Jafari",
        "timestamp": 1711443608
    },
    {
        "content": "<p>Of course that's possible.</p>",
        "id": 429608789,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711443623
    },
    {
        "content": "<p>Actually Bearer Tokens are a feature preview right now</p>",
        "id": 429608868,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711443652
    },
    {
        "content": "<p>You'd need to enable them</p>",
        "id": 429608896,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711443661
    },
    {
        "content": "<p>But they will allow for better integration of Dataverse with other services</p>",
        "id": 429608954,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711443684
    },
    {
        "content": "<p>The transition of Dataverse becoming a backend and separated frontend application are underway</p>",
        "id": 429609025,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711443712
    },
    {
        "content": "<p>So you mean I should first create an api token for my OIDC provider so then the provider can call another endpoint (by using the api token) of dataverse to launch it?</p>",
        "id": 429610353,
        "sender_full_name": "Mohsen Jafari",
        "timestamp": 1711444122
    },
    {
        "content": "<p>Maybe <span class=\"user-mention\" data-user-id=\"617722\">@Johannes D</span> or <span class=\"user-mention\" data-user-id=\"616555\">@Vera Clemens</span> can explain how they use bearer tokens.</p>",
        "id": 429619852,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1711447351
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598183\">@Oliver Bertuch</span> Could you login via API bearer token and get a session going?  &lt;- AFAIK, No. If I am not wrong the login logic through an OIDC provider is only supported in JSF login and not in the API.</p>",
        "id": 429633701,
        "sender_full_name": "Guillermo Portas",
        "timestamp": 1711452282
    },
    {
        "content": "<p>In fact, the goal is to enable direct OIDC integration in the future with login through PKCE in the SPA, but to do this, if I'm not mistaken, we need to first standardize OIDC in the backend.</p>",
        "id": 429633752,
        "sender_full_name": "Guillermo Portas",
        "timestamp": 1711452303
    },
    {
        "content": "<p>That's why I mentioned Johannes and Vera. As far as I understand, their alternative frontend to Dataverse uses OIDC and bearer tokens to maintain a session. And they don't use JSF.</p>",
        "id": 429635536,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1711453020
    },
    {
        "content": "<p>Yes, we enabled the preview feature by setting the environment variable <code>DATAVERSE_FEATURE_API_BEARER_AUTH</code> to <code>1</code>. Then we authorize our API calls by sending the <code>Authorization: Bearer ...</code> header. Not sure if this answers the question in this thread completely. <span class=\"user-mention\" data-user-id=\"617722\">@Johannes D</span> feel free to add if I missed something.</p>",
        "id": 429637599,
        "sender_full_name": "Vera Clemens",
        "timestamp": 1711453811
    },
    {
        "content": "<p>This might be interesting here: <a href=\"https://stackoverflow.com/a/31037858\">https://stackoverflow.com/a/31037858</a></p>\n<p>The thread is about an SSO (which is implemented at the reverse proxy level), but the idea with the filter could be reused in our case, too. We could create a filter that looks for a Bearer token somewhere in the initial request  to Dataverse. That way coming from the SPA or some other application integrated with Dataverse (it must know it should send the token) you would be immediately logged in and from then on would use the session during further interaction</p>",
        "id": 429641321,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711455183
    },
    {
        "content": "<p>I am aware that this is tricky WRT security... Moving around the access token like that might not be optimal.</p>",
        "id": 429641779,
        "sender_full_name": "Oliver Bertuch",
        "timestamp": 1711455361
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"698782\">@Mohsen Jafari</span> I assume you want something like <a href=\"https://github.com/IQSS/dataverse/pull/10278\">https://github.com/IQSS/dataverse/pull/10278</a>. This  API call creates an account via a configured OIDC provider. When already present the user is just authenticated (i.e. <a href=\"https://github.com/IQSS/dataverse/pull/10278/files#diff-f342f831fc5ecdf010c3c5fbfcb84d7abd55c15b2f9e3d0ceccf4a1bab0345d5R154\">init  a classic session</a>). For this use case SSO i.e. <a href=\"https://auth0.com/docs/authenticate/login/configure-silent-authentication\">silent authentication</a> (promt=none) is not needed. However, we could also implement silent logins for the \"old\" JSF pages...</p>",
        "id": 429648893,
        "sender_full_name": "Johannes D",
        "timestamp": 1711457803
    },
    {
        "content": "<p>I became overwhelmed in this regard and cannot decide what would be the best but simplest path to go for solving my problem.</p>",
        "id": 429886437,
        "sender_full_name": "Mohsen Jafari",
        "timestamp": 1711553129
    }
]