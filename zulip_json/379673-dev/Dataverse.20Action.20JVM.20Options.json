[
    {
        "content": "<p>I am currently setting up the <a href=\"https://github.com/gdcc/dataverse-action/pull/17\">Dataverse Action</a> to support S3 backends. Everything is functioning as expected, the storage change works.</p>\n<p>However, I am encountering an issue when including JVM options in the action's tests, as they appear to have no effect. For example, I have set the localstack backend's <code>min-part-size</code> to a lower value (see <a href=\"https://github.com/gdcc/dataverse-action/blob/a579da737db2e4cdbf6f37467b115be4875eb976/.github/workflows/test-action.yml#L18-L21\">here</a>) and then verified whether multipart URLs are generated (see <a href=\"https://github.com/gdcc/dataverse-action/blob/a579da737db2e4cdbf6f37467b115be4875eb976/.github/workflows/scripts/test_dataverse.py#L211-L222\">here</a>). Instead, I am receiving only a single-part URL, which is not the desired outcome.</p>\n<p>I have confirmed that the same JVM option works correctly when tested outside of the action by adding it to the compose file. Does anyone have any suggestions on how to resolve this issue (<span class=\"user-mention\" data-user-id=\"598183\">@Oliver Bertuch</span> <span class=\"user-mention\" data-user-id=\"598112\">@Philip Durbin ‚òÄÔ∏è</span> )? I am not entirely confident in the MicroProfile approach used <a href=\"https://github.com/gdcc/dataverse-action/blob/a579da737db2e4cdbf6f37467b115be4875eb976/action.yml#L70-L77\">here</a>.</p>",
        "id": 512513051,
        "sender_full_name": "Jan Range",
        "timestamp": 1744797781
    },
    {
        "content": "<p>Are you trying to change the JVM option on the fly? I don't think that's supported. I think you need to add it next to the other \"localstack1\" options like you do <a href=\"https://github.com/gdcc/dataverse-action/blob/a579da737db2e4cdbf6f37467b115be4875eb976/docker-compose.yml#L35\">here</a> in the compose file.</p>",
        "id": 512523340,
        "sender_full_name": "Philip Durbin üöÄ",
        "timestamp": 1744801075
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598183\">@Oliver Bertuch</span> has set up a part of the workflow that utilizes a trick to ingest JVM options:</p>\n<p><a href=\"https://github.com/gdcc/dataverse-action/blob/a579da737db2e4cdbf6f37467b115be4875eb976/action.yml#L70-L77\">https://github.com/gdcc/dataverse-action/blob/a579da737db2e4cdbf6f37467b115be4875eb976/action.yml#L70-L77</a></p>\n<p>But if this does not work, I'd like to have a way to parametrize the <code>min-part-size</code> of LocalStack. Or do you think it is fine to hard-coding it to a reasonable size?</p>",
        "id": 512524057,
        "sender_full_name": "Jan Range",
        "timestamp": 1744801292
    },
    {
        "content": "<p>Interesting. Have you confirmed the approach works?</p>",
        "id": 512533155,
        "sender_full_name": "Philip Durbin üöÄ",
        "timestamp": 1744804113
    },
    {
        "content": "<p>The \"We use the MicroProfile Config Source trick of reading properties from a directory\" approach, that is.</p>",
        "id": 512533309,
        "sender_full_name": "Philip Durbin üöÄ",
        "timestamp": 1744804156
    },
    {
        "content": "<p>I suspect it is not working because the <code>partSize</code> coming back in my test does not reflect the one specified in the action JVM options parameter.</p>",
        "id": 512533594,
        "sender_full_name": "Jan Range",
        "timestamp": 1744804247
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598183\">@Oliver Bertuch</span> has set this up and looking at the link it seems like a valid approach. I am not sure, though, if this is a mutually exclusive case (env JVM options vs the trick)</p>",
        "id": 512533887,
        "sender_full_name": "Jan Range",
        "timestamp": 1744804324
    },
    {
        "content": "<p>Right but maybe you could set the version or something. Some random setting just to make sure it's working.</p>",
        "id": 512536538,
        "sender_full_name": "Philip Durbin üöÄ",
        "timestamp": 1744805060
    },
    {
        "content": "<p>I think it's <code>dataverse.version</code> from <a href=\"https://github.com/IQSS/dataverse/blob/v6.6/src/main/java/edu/harvard/iq/dataverse/settings/JvmSettings.java#L42\">the code</a>. Or we could pick something else.</p>",
        "id": 512537351,
        "sender_full_name": "Philip Durbin üöÄ",
        "timestamp": 1744805345
    },
    {
        "content": "<p>Sounds good, what does it do, and how can I check it? Is it the typical <code>info/version</code> one?</p>",
        "id": 512537630,
        "sender_full_name": "Jan Range",
        "timestamp": 1744805423
    },
    {
        "content": "<p>I went for a more radical test and excluded all the <code>localstack</code> JVM options and used them as input to the action. Although the <code>localstack</code> service is up, the tests are failing and do not recognize the storage driver. I'd conclude that the method does not work unfortunately <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>\n<p>Action Run --&gt; <a href=\"https://github.com/JR-1991/dataverse-action/actions/runs/14492676895\">https://github.com/JR-1991/dataverse-action/actions/runs/14492676895</a> <br>\nAction Test --&gt; <a href=\"https://github.com/JR-1991/dataverse-action/blob/test-action-input/.github/workflows/test-action.yml\">https://github.com/JR-1991/dataverse-action/blob/test-action-input/.github/workflows/test-action.yml</a><br>\nCompose --&gt; <a href=\"https://github.com/JR-1991/dataverse-action/blob/test-action-input/docker-compose.yml\">https://github.com/JR-1991/dataverse-action/blob/test-action-input/docker-compose.yml</a></p>",
        "id": 512541594,
        "sender_full_name": "Jan Range",
        "timestamp": 1744806726
    },
    {
        "content": "<p>Since this is not working as expected, I would like to choose a hard-coded solution for now and provide a minimum part size of around 10 MB to test the multi-part direct upload. I believe this should be fine. What do you think?</p>",
        "id": 512542040,
        "sender_full_name": "Jan Range",
        "timestamp": 1744806854
    },
    {
        "content": "<p>Yes, the typical api/info/version</p>",
        "id": 512548219,
        "sender_full_name": "Philip Durbin üöÄ",
        "timestamp": 1744808618
    },
    {
        "content": "<p>Sure, hard-coded 10 MB sounds good.</p>",
        "id": 512548380,
        "sender_full_name": "Philip Durbin üöÄ",
        "timestamp": 1744808658
    },
    {
        "content": "<p>Is it possible to define multiple backends for the same service? Something along the lines of a storage backend with a bigger size and one with a smaller size.</p>",
        "id": 512548483,
        "sender_full_name": "Jan Range",
        "timestamp": 1744808697
    },
    {
        "content": "<p>Yep, should work.</p>",
        "id": 512549031,
        "sender_full_name": "Philip Durbin üöÄ",
        "timestamp": 1744808845
    }
]