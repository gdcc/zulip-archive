[
    {
        "content": "<p>I've been reviewing this pull request: JSON Schema creator and validator <a href=\"https://github.com/IQSS/dataverse/issues/10109\">#10109</a></p>\n<p>I didn't write the code but I'm happy to discuss and answer any questions.</p>",
        "id": 404846564,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701258361
    },
    {
        "content": "<p>Preliminary docs are here: <a href=\"https://dataverse-guide--10109.org.readthedocs.build/en/10109/api/native-api.html#retrieve-a-dataset-json-schema-for-a-collection\">https://dataverse-guide--10109.org.readthedocs.build/en/10109/api/native-api.html#retrieve-a-dataset-json-schema-for-a-collection</a></p>",
        "id": 404846761,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701258426
    },
    {
        "content": "<p>In short, you can ask a specific collection for a JSON Schema for creating a dataset within it.</p>",
        "id": 404846834,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701258463
    },
    {
        "content": "<p>The idea is that some collections require additional fields.</p>",
        "id": 404846875,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701258482
    },
    {
        "content": "<p>And those fields are reflected in the JSON Schema.</p>",
        "id": 404846940,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701258491
    },
    {
        "content": "<p>I accidentally marked this as resolved, and now it is back to its original state <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span>. I am doing QA and trying to understand the Issue/PR I am sure I will ask around here for more information.</p>",
        "id": 404873041,
        "sender_full_name": "Juan Pablo Tosca Villanueva",
        "timestamp": 1701266720
    },
    {
        "content": "<p>Sure! I started this thread initially because <span class=\"user-mention\" data-user-id=\"599841\">@Jan Range</span> and I were talking about the JSON Schema stuff in the new pyDataverse revamp doc at <a class=\"stream-topic\" data-stream-id=\"377090\" href=\"/#narrow/stream/377090-python/topic/PyDataverse.20Re-Vamp\">#python &gt; PyDataverse Re-Vamp</a> but everyone is absolutely welcome!</p>",
        "id": 404873514,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701266865
    },
    {
        "content": "<p>That's awesome and solving a couple of issues for pyDataverse/EasyDataverse! Is there a way to test this functionality already?</p>",
        "id": 404907646,
        "sender_full_name": "Jan Range",
        "timestamp": 1701276190
    },
    {
        "content": "<p><code>ghcr.io/gdcc/dataverse:9464-schema-creator-validator</code> I guess. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 404907934,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701276271
    },
    {
        "content": "<p>You want the code running on your laptop or a server?</p>",
        "id": 404908074,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701276315
    },
    {
        "content": "<p>Either way works fine for me <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span></p>",
        "id": 404911290,
        "sender_full_name": "Jan Range",
        "timestamp": 1701277247
    },
    {
        "content": "<p>Do you have Java and Maven installed? If so, switch to the <a href=\"https://github.com/IQSS/dataverse/tree/9464-schema-creator-validator\">9464-schema-creator-validator</a> branch and run the quickstart: <a href=\"https://guides.dataverse.org/en/6.0/developers/dev-environment.html#quickstart\">https://guides.dataverse.org/en/6.0/developers/dev-environment.html#quickstart</a></p>",
        "id": 404928502,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701283063
    },
    {
        "content": "<p>Smooth! Installation and endpoint working flawlessly <span aria-label=\"raised hands\" class=\"emoji emoji-1f64c\" role=\"img\" title=\"raised hands\">:raised_hands:</span></p>\n<p><a href=\"/user_uploads/53090/vwi-NfzWIguZljR5z8FBVd0h/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/53090/vwi-NfzWIguZljR5z8FBVd0h/image.png\" title=\"image.png\"><img src=\"/user_uploads/53090/vwi-NfzWIguZljR5z8FBVd0h/image.png\"></a></div>",
        "id": 405072347,
        "sender_full_name": "Jan Range",
        "timestamp": 1701335660
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"599841\">@Jan Range</span> fantastic! Is the JSON Schema more or less what you expect? Can you work with it?</p>",
        "id": 405107834,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701347677
    },
    {
        "content": "<p>It looks great so far! I will experiment with it and see how to plug it into EasyDataverse.</p>",
        "id": 405110563,
        "sender_full_name": "Jan Range",
        "timestamp": 1701348625
    },
    {
        "content": "<p>One missing thing I found is that controlled vocabularies are not included. Afaik the <code>subject</code> field is a controlled vocab, and maybe this could be added as an <code>enum</code>?</p>",
        "id": 405110618,
        "sender_full_name": "Jan Range",
        "timestamp": 1701348651
    },
    {
        "content": "<p>Happy to comment this to the PR if I am not missing something.</p>",
        "id": 405110868,
        "sender_full_name": "Jan Range",
        "timestamp": 1701348736
    },
    {
        "content": "<p>Yes, please comment on the PR. Thanks!</p>",
        "id": 405112449,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701349230
    },
    {
        "content": "<p>Thanks for that <span class=\"user-mention\" data-user-id=\"599841\">@Jan Range</span> I will bring it up during standup today. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 405146670,
        "sender_full_name": "Juan Pablo Tosca Villanueva",
        "timestamp": 1701359622
    },
    {
        "content": "<p>Hey, this PR also addresses, this old issue: Query Dataverse for mandatory metadata fields via API <a href=\"https://github.com/IQSS/dataverse/issues/6978\">#6978</a></p>",
        "id": 405190210,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701374033
    },
    {
        "content": "<p>Is it possible to also add information about datatypes (int,float) to the schema?</p>",
        "id": 405317101,
        "sender_full_name": "Johannes D",
        "timestamp": 1701421493
    },
    {
        "content": "<p>If I am correct, the new schemes are meant for the payload input to endpoints that add/update <br>\nmetadata (see Example 1). These do not contain the type information that is shipped with the basic metadatablock schemes. </p>\n<p>Also afaik, the endpoints expect (an array of) strings for the <code>value</code> property, given it is a primitive. This is also part of the schema for a <code>field</code> (see example 2) and thus I expect the types cannot be added in the typical way.  Hence, the payload has no type enforcing per-se and types are handled at Dataverse's side. Please correct me if I am wrong <span class=\"user-mention\" data-user-id=\"598112\">@Philip Durbin</span> </p>\n<p><em>Example 1</em></p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"nt\">\"datasetVersion\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">\"metadataBlocks\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"nt\">\"astrophysics\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">\"fields\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">          </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">\"multiple\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">\"typeClass\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"controlledVocabulary\"</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">\"typeName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"astroType\"</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">              </span><span class=\"s2\">\"Mosaic\"</span>\n<span class=\"w\">            </span><span class=\"p\">]</span>\n<span class=\"w\">          </span><span class=\"p\">},</span>\n<span class=\"w\">          </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">\"multiple\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">\"typeClass\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"primitive\"</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">\"typeName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"astroFacility\"</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">              </span><span class=\"s2\">\"AIK-2\"</span><span class=\"p\">,</span>\n<span class=\"w\">              </span><span class=\"s2\">\"AIK-3\"</span>\n<span class=\"w\">            </span><span class=\"p\">]</span>\n<span class=\"w\">          </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"err\">...</span><span class=\"p\">]</span>\n<span class=\"w\">        </span><span class=\"p\">]</span>\n</code></pre></div>\n</div></div>\n<p><em>Example 2</em></p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"nt\">\"field\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">\"required\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                </span><span class=\"s2\">\"typeClass\"</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"s2\">\"multiple\"</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"s2\">\"typeName\"</span>\n<span class=\"w\">            </span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"anyOf\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                        </span><span class=\"p\">{</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"array\"</span>\n<span class=\"w\">                        </span><span class=\"p\">},</span>\n<span class=\"w\">                        </span><span class=\"p\">{</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"string\"</span>\n<span class=\"w\">                        </span><span class=\"p\">},</span>\n<span class=\"w\">                        </span><span class=\"p\">{</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"$ref\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"#/$defs/field\"</span>\n<span class=\"w\">                        </span><span class=\"p\">}</span>\n<span class=\"w\">                    </span><span class=\"p\">]</span>\n<span class=\"w\">                </span><span class=\"p\">},</span>\n<span class=\"w\">                </span><span class=\"nt\">\"typeClass\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"string\"</span>\n<span class=\"w\">                </span><span class=\"p\">},</span>\n<span class=\"w\">                </span><span class=\"nt\">\"multiple\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"boolean\"</span>\n<span class=\"w\">                </span><span class=\"p\">},</span>\n<span class=\"w\">                </span><span class=\"nt\">\"typeName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"string\"</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">   </span><span class=\"p\">}</span>\n</code></pre></div>\n</div></div>",
        "id": 405337410,
        "sender_full_name": "Jan Range",
        "timestamp": 1701428296
    },
    {
        "content": "<p>Now that both schemes (<a href=\"https://demo.dataverse.org/api/metadatablocks/citation\">basic</a> and collection-sepecifc) are at hand, one could condense this into an intermediate schema that complies with the collection requirements and types expected by the metadata block. That's essentially what EasyDataverse is doing. </p>\n<p>Here is an <a href=\"https://github.com/JR-1991/pyDaRUS/blob/main/pyDaRUS/metadatablocks/schemas/citation.json\">example of a JSON schema for Citation</a> generated by EasyDataverse. <span class=\"user-mention\" data-user-id=\"617722\">@Johannes D</span>  would this be useful for you?</p>",
        "id": 405338789,
        "sender_full_name": "Jan Range",
        "timestamp": 1701428763
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"617722\">@Johannes D</span> thanks for leaving a comment on the PR. That's perfect. I just replied there.</p>",
        "id": 405351897,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701433354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"599841\">@Jan Range</span> I think I'm confused by how you're saying old and new. To me there's only one schema but I'm sure I'm simply misunderstanding what you're saying. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 405352068,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701433421
    },
    {
        "content": "<p>Sorry I should have rephrased that - End of the week and my brain goes <span aria-label=\"dizzy\" class=\"emoji emoji-1f635\" role=\"img\" title=\"dizzy\">:dizzy:</span> </p>\n<p>By \"old\" I mean the basic block schema (such as <a href=\"https://demo.dataverse.org/api/metadatablocks/citation\">this</a>), and with \"new\" the novel collection JSON schema.</p>",
        "id": 405352880,
        "sender_full_name": "Jan Range",
        "timestamp": 1701433749
    },
    {
        "content": "<p>Oh, that makes much more sense. Thanks.</p>",
        "id": 405354259,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701434325
    },
    {
        "content": "<p>Kind of, the <code>old</code> format allows to specify a <code>fieldType</code> and I'd like to have that integrated into the new schema.  One use case would be the SPA that uses something like  this (<a href=\"https://rjsf-team.github.io/react-jsonschema-form/\">https://rjsf-team.github.io/react-jsonschema-form/</a>) to auto generate a form based on the schema.  Here the field type is needed to create nice forms for numbers or dates...</p>",
        "id": 405354814,
        "sender_full_name": "Johannes D",
        "timestamp": 1701434543
    },
    {
        "content": "<p>Thanks for the explanation <span class=\"user-mention\" data-user-id=\"617722\">@Johannes D</span> <span aria-label=\"blush\" class=\"emoji emoji-1f60a\" role=\"img\" title=\"blush\">:blush:</span> I am unsure if it is possible to include <code>fieldType</code> in the novel JSON schema. The schema validates whether a <code>typeName</code> is given in a payload to check compliance with the collection and utilizes a generic <code>field</code> schema.</p>\n<p>To validate, I have checked the JSON schema for a collection that uses the <code>astrophysics</code> config and requires a <code>float</code> field. Unfortunately, the schema does not include any type checks. Only upon sending you will receive a validation error.</p>\n<p><em>Collection schema</em></p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">\"$schema\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"http://json-schema.org/draft-04/schema#\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">\"$defs\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">\"field\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">\"required\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                </span><span class=\"s2\">\"typeClass\"</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"s2\">\"multiple\"</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"s2\">\"typeName\"</span>\n<span class=\"w\">            </span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"anyOf\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                        </span><span class=\"p\">{</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"array\"</span>\n<span class=\"w\">                        </span><span class=\"p\">},</span>\n<span class=\"w\">                        </span><span class=\"p\">{</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"string\"</span>\n<span class=\"w\">                        </span><span class=\"p\">},</span>\n<span class=\"w\">                        </span><span class=\"p\">{</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"$ref\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"#/$defs/field\"</span>\n<span class=\"w\">                        </span><span class=\"p\">}</span>\n<span class=\"w\">                    </span><span class=\"p\">]</span>\n<span class=\"w\">                </span><span class=\"p\">},</span>\n<span class=\"w\">                </span><span class=\"nt\">\"typeClass\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"string\"</span>\n<span class=\"w\">                </span><span class=\"p\">},</span>\n<span class=\"w\">                </span><span class=\"nt\">\"multiple\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"boolean\"</span>\n<span class=\"w\">                </span><span class=\"p\">},</span>\n<span class=\"w\">                </span><span class=\"nt\">\"typeName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"string\"</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">\"datasetVersion\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"nt\">\"license\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                        </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"string\"</span>\n<span class=\"w\">                        </span><span class=\"p\">},</span>\n<span class=\"w\">                        </span><span class=\"nt\">\"uri\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"format\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"uri\"</span>\n<span class=\"w\">                        </span><span class=\"p\">}</span>\n<span class=\"w\">                    </span><span class=\"p\">},</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"required\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                        </span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span>\n<span class=\"w\">                        </span><span class=\"s2\">\"uri\"</span>\n<span class=\"w\">                    </span><span class=\"p\">]</span>\n<span class=\"w\">                </span><span class=\"p\">},</span>\n<span class=\"w\">                </span><span class=\"nt\">\"metadataBlocks\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                        </span><span class=\"nt\">\"citation\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                </span><span class=\"nt\">\"fields\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"array\"</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"nt\">\"items\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                        </span><span class=\"nt\">\"$ref\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"#/$defs/field\"</span>\n<span class=\"w\">                                    </span><span class=\"p\">},</span>\n<span class=\"w\">                                    </span><span class=\"nt\">\"minItems\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"nt\">\"allOf\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                                        </span><span class=\"p\">{</span>\n<span class=\"w\">                                            </span><span class=\"nt\">\"contains\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                    </span><span class=\"nt\">\"typeName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                        </span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"title\"</span>\n<span class=\"w\">                                                    </span><span class=\"p\">}</span>\n<span class=\"w\">                                                </span><span class=\"p\">}</span>\n<span class=\"w\">                                            </span><span class=\"p\">}</span>\n<span class=\"w\">                                        </span><span class=\"p\">},</span>\n<span class=\"w\">                                        </span><span class=\"p\">{</span>\n<span class=\"w\">                                            </span><span class=\"nt\">\"contains\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                    </span><span class=\"nt\">\"typeName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                        </span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"author\"</span>\n<span class=\"w\">                                                    </span><span class=\"p\">}</span>\n<span class=\"w\">                                                </span><span class=\"p\">}</span>\n<span class=\"w\">                                            </span><span class=\"p\">}</span>\n<span class=\"w\">                                        </span><span class=\"p\">},</span>\n<span class=\"w\">                                        </span><span class=\"p\">{</span>\n<span class=\"w\">                                            </span><span class=\"nt\">\"contains\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                    </span><span class=\"nt\">\"typeName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                        </span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"datasetContact\"</span>\n<span class=\"w\">                                                    </span><span class=\"p\">}</span>\n<span class=\"w\">                                                </span><span class=\"p\">}</span>\n<span class=\"w\">                                            </span><span class=\"p\">}</span>\n<span class=\"w\">                                        </span><span class=\"p\">},</span>\n<span class=\"w\">                                        </span><span class=\"p\">{</span>\n<span class=\"w\">                                            </span><span class=\"nt\">\"contains\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                    </span><span class=\"nt\">\"typeName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                        </span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"dsDescription\"</span>\n<span class=\"w\">                                                    </span><span class=\"p\">}</span>\n<span class=\"w\">                                                </span><span class=\"p\">}</span>\n<span class=\"w\">                                            </span><span class=\"p\">}</span>\n<span class=\"w\">                                        </span><span class=\"p\">},</span>\n<span class=\"w\">                                        </span><span class=\"p\">{</span>\n<span class=\"w\">                                            </span><span class=\"nt\">\"contains\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                    </span><span class=\"nt\">\"typeName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                        </span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"subject\"</span>\n<span class=\"w\">                                                    </span><span class=\"p\">}</span>\n<span class=\"w\">                                                </span><span class=\"p\">}</span>\n<span class=\"w\">                                            </span><span class=\"p\">}</span>\n<span class=\"w\">                                        </span><span class=\"p\">}</span>\n<span class=\"w\">                                    </span><span class=\"p\">]</span>\n<span class=\"w\">                                </span><span class=\"p\">}</span>\n<span class=\"w\">                            </span><span class=\"p\">},</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"required\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                                </span><span class=\"s2\">\"fields\"</span>\n<span class=\"w\">                            </span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"p\">},</span>\n<span class=\"w\">                        </span><span class=\"nt\">\"geospatial\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                </span><span class=\"nt\">\"fields\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"array\"</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"nt\">\"items\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                        </span><span class=\"nt\">\"$ref\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"#/$defs/field\"</span>\n<span class=\"w\">                                    </span><span class=\"p\">},</span>\n<span class=\"w\">                                    </span><span class=\"nt\">\"minItems\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">                                    </span><span class=\"nt\">\"allOf\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                                        </span><span class=\"p\">{</span>\n<span class=\"w\">                                            </span><span class=\"nt\">\"contains\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                </span><span class=\"nt\">\"properties\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                    </span><span class=\"nt\">\"typeName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                                                        </span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"geographicBoundingBox\"</span>\n<span class=\"w\">                                                    </span><span class=\"p\">}</span>\n<span class=\"w\">                                                </span><span class=\"p\">}</span>\n<span class=\"w\">                                            </span><span class=\"p\">}</span>\n<span class=\"w\">                                        </span><span class=\"p\">}</span>\n<span class=\"w\">                                    </span><span class=\"p\">]</span>\n<span class=\"w\">                                </span><span class=\"p\">}</span>\n<span class=\"w\">                            </span><span class=\"p\">},</span>\n<span class=\"w\">                            </span><span class=\"nt\">\"required\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                                </span><span class=\"s2\">\"fields\"</span>\n<span class=\"w\">                            </span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"p\">}</span>\n<span class=\"w\">                    </span><span class=\"p\">},</span>\n<span class=\"w\">                    </span><span class=\"nt\">\"required\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                        </span><span class=\"s2\">\"citation\"</span><span class=\"p\">,</span>\n<span class=\"w\">                        </span><span class=\"s2\">\"geospatial\"</span>\n<span class=\"w\">                    </span><span class=\"p\">]</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">},</span>\n<span class=\"w\">            </span><span class=\"nt\">\"required\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                </span><span class=\"s2\">\"metadataBlocks\"</span>\n<span class=\"w\">            </span><span class=\"p\">]</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"nt\">\"required\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"s2\">\"datasetVersion\"</span>\n<span class=\"w\">    </span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</div></div>",
        "id": 405362600,
        "sender_full_name": "Jan Range",
        "timestamp": 1701436993
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"617722\">@Johannes D</span> thanks! I just copied your comment about that React tool over at <a href=\"https://github.com/IQSS/dataverse-frontend/issues/231#issuecomment-1836116092\">https://github.com/IQSS/dataverse-frontend/issues/231#issuecomment-1836116092</a> (we are actively building forms in React now)</p>",
        "id": 405363180,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701437172
    },
    {
        "content": "<p>However, given the collection and metadatablock schema, it is possible to create a new schema from both. <span class=\"user-mention\" data-user-id=\"598112\">@Philip Durbin</span> I think receiving a schema such as this <a href=\"https://github.com/JR-1991/pyDaRUS/blob/main/pyDaRUS/metadatablocks/schemas/citation.json\">one</a> would be awesome since it checks on types too and you can plug it easily into other plugins such as the Form Creator.</p>",
        "id": 405363190,
        "sender_full_name": "Jan Range",
        "timestamp": 1701437175
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"599841\">@Jan Range</span>  The lack of further distinction for the primitives values (int, float, boolean, date) is the problem and I hope we could fix that with the new schema representation. IMHO the new schema would be a perfect start for v2 of the API</p>",
        "id": 405365157,
        "sender_full_name": "Johannes D",
        "timestamp": 1701437808
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"598112\">Philip Durbin</span> <a href=\"#narrow/stream/379673-dev/topic/JSON.20Schema.20for.20datasets/near/405363180\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"617722\">Johannes D</span> thanks! I just copied your comment about that React tool over at <a href=\"https://github.com/IQSS/dataverse-frontend/issues/231#issuecomment-1836116092\">https://github.com/IQSS/dataverse-frontend/issues/231#issuecomment-1836116092</a> (we are actively building forms in React now)</p>\n</blockquote>\n<p>Thanks, before one can use the tooling we need to translate the rather complex dataverse json representation into a more readable, JSON intuitive representation...basically into what Jan suggested. Otherwise the form represents the complex internal data structure, which is something the normal user should not see.</p>",
        "id": 405365843,
        "sender_full_name": "Johannes D",
        "timestamp": 1701438013
    },
    {
        "content": "<p>Actually thats one reason why we have a python facade between our react SPA and dataverse</p>",
        "id": 405366022,
        "sender_full_name": "Johannes D",
        "timestamp": 1701438078
    },
    {
        "content": "<p>right, v2 territory</p>",
        "id": 405366036,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701438082
    },
    {
        "content": "<p>well, maybe we could implement a facade in js-dataverse</p>",
        "id": 405366112,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701438106
    },
    {
        "content": "<p>I'd rather would like to see that  the backend as other non js-clients would also benefit from it. I foresee two tasks in the backend: Creation of collection specific simple schemas that include all needed information and transformation of json in the specific schema to the DB model and vise-versa.</p>",
        "id": 405367056,
        "sender_full_name": "Johannes D",
        "timestamp": 1701438398
    },
    {
        "content": "<p>Oh, sure. I just meant that until we have a slick v2 API maybe js-dataverse could follow your lead and implement a similar facade.</p>",
        "id": 405367185,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701438443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"599841\">@Jan Range</span> python stuff ^^ <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 405367229,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701438458
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"617722\">@Johannes D</span> are you actually using react-jsonschema-form or is it just a dream?</p>",
        "id": 405380069,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701442601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598112\">@Philip Durbin</span>    We wanted to use it but our designers  and users requested a complex stepper for the input forms. The effort to adapt the lib for the use case was more complex than writing a  form by hand, so we are not using it in this project. In a different project I used the library and was happy with the lib:)</p>",
        "id": 405380826,
        "sender_full_name": "Johannes D",
        "timestamp": 1701442856
    },
    {
        "content": "<p>Very interesting. Thanks.</p>",
        "id": 405406061,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1701450964
    },
    {
        "content": "<p>How do folks feel about phase two of \"JSON Schema for dataset\"? Is <a href=\"https://github.com/IQSS/dataverse/issues/10543\">#10543</a> what you expected? I just left a comment but maybe I'm confused: <a href=\"https://github.com/IQSS/dataverse/pull/10543#pullrequestreview-2119147899\">https://github.com/IQSS/dataverse/pull/10543#pullrequestreview-2119147899</a></p>",
        "id": 444790153,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1718399199
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598183\">@Oliver Bertuch</span> you were part of the discussion early on and created this issue: bklog: Deliverable - As a system integrator, I would appreciate a JSON Schema for validating my dataset JSON before uploading via API - <a href=\"https://github.com/IQSS/dataverse-pm/issues/26\">https://github.com/IQSS/dataverse-pm/issues/26</a></p>\n<p>Any thoughts on my comment above?</p>",
        "id": 448430305,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1719865303
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"599841\">@Jan Range</span> this is the thread I just mentioned on the <a href=\"https://docs.google.com/document/d/1O2DzuDRPUSq9-LYAaQ5eVRNW4ajwwTbX271ntztVW-Q/edit?usp=sharing\">pyDataverse call</a>.</p>",
        "id": 448866393,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1720017226
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"599841\">@Jan Range</span> <span class=\"user-mention\" data-user-id=\"598183\">@Oliver Bertuch</span> have you had a chance to think about <a href=\"https://github.com/IQSS/dataverse/pull/10543\">https://github.com/IQSS/dataverse/pull/10543</a> ?</p>\n<p>It came up again in sprint planning yesterday.</p>\n<p>I think we all agree that the PR should add value (more detailed error messages). However, it doesn't improve the JSON Schema we offer for datasets. Does that matter? Is that what you want?</p>",
        "id": 450692328,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1720699562
    },
    {
        "content": "<p>To me, it looks great already! I have two small points that could be beneficial for integration into external tools/libs:</p>\n<p>The message is good, but it is currently limited to a human-readable format. Adding a JSONPath or any other path that displays the exact location would allow other libraries to do more with the validation result. Furthermore, adding different error types could help. For instance, if a type validation fails, this could be indicated. </p>\n<p>If I could imagine a response example it would look something like this:</p>\n<p><em>Paths are not accurate</em></p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"nt\">\"is_valid\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"yes\"</span><span class=\"p\">,</span>\n<span class=\"w\">  </span><span class=\"nt\">\"errors\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"nt\">\"location\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"citation/fields/0/value\"</span><span class=\"p\">,</span>\n<span class=\"w\">      </span><span class=\"nt\">\"error_type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"required\"</span><span class=\"p\">,</span>\n<span class=\"w\">      </span><span class=\"nt\">\"message\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"The title field is required.\"</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"nt\">\"location\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"citation/fields/1/value\"</span><span class=\"p\">,</span>\n<span class=\"w\">      </span><span class=\"nt\">\"error_type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"invalid\"</span><span class=\"p\">,</span>\n<span class=\"w\">      </span><span class=\"nt\">\"message\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"The description must be a string.\"</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Is it possible to derive such a format from your validator? I know in Python and Rust it is possible, but I am a Java Noob <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 450695971,
        "sender_full_name": "Jan Range",
        "timestamp": 1720700741
    },
    {
        "content": "<p>Great, thanks. <span class=\"user-mention\" data-user-id=\"599841\">@Jan Range</span> would you mind copying and pasting your comment into the PR or linking here?</p>",
        "id": 450698367,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1720701472
    },
    {
        "content": "<p>Done <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 450702458,
        "sender_full_name": "Jan Range",
        "timestamp": 1720702501
    },
    {
        "content": "<p><a href=\"https://github.com/IQSS/dataverse/issues/10543\">#10543</a> has been merged</p>",
        "id": 463774770,
        "sender_full_name": "Philip Durbin ðŸš€",
        "timestamp": 1724177785
    }
]